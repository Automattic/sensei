name: PHP Linting and Unit Tests

on:
  pull_request:
    branches:
      - master
      - 'feature/**'
      - 'release/**'

jobs:
  lint:
    name:    PHP Linting
    runs-on: ubuntu-16.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        with:
          path: ~/.cache/composer/
          key:  ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          tools:       composer
          coverage:    none
      - name: Set up branches
        run: git checkout -b master refs/remotes/origin/master && git checkout -
      - name: Install PHP dependencies
        run: composer self-update --1 && composer install --no-ansi --no-interaction --prefer-dist --no-progress
      - name: Run linter
        run: ./scripts/linter-ci
  test:
    name: PHP Unit Tests
    runs-on: ubuntu-16.04
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        wp: [ 'latest' ]
        wpmu: [ 0 ]
        php: [ '7.2', '7.3', '7.4' ]
        include:
          - php: 7.3
            wp: 5.4
          - php: 7.3
            wp: 5.5
          - php: 7.3
            wp: latest
            wpmu: 1
    env:
      WP_VERSION: ${{ matrix.wp }}
      WP_MULTISITE: ${{ matrix.wpmu }}
      PHP_VERSION: ${{ matrix.php }}
    steps:
      # clone the repository
      - uses: actions/checkout@v2
      # enable dependencies caching
      - name: Cache composer deps
        uses: actions/cache@v2
        env:
          cache-name: cache-composer-deps
        with:
          # composer cache files are stored in `~/.composer/cache/files/vendor/packagename` on Linux/macOS
          path: ~/.composer/cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # setup PHP, but without debug extensions for reasonable performance
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: mysql
          tools: composer
          coverage: none
      # run CI checks
      - name: Start mysql service
        run: sudo /etc/init.d/mysql start
      - name: Install PHP dependencies
        run: composer install --no-ansi --no-interaction --prefer-dist --no-progress
      - name: Setup test environment
        run: bash ./tests/bin/install-wp-tests.sh wordpress_test root root localhost $WP_VERSION
      - name: Run tests
        run: ./vendor/bin/phpunit