Starting analysis

== apigen/hook-docs.php (139 issues) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-hookfinder.php, but found hook-docs.php. [phpcodesniffer]
13: Expected 1 space after "="; 2 found [phpcodesniffer]
13: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
13: Equals sign not aligned with surrounding assignments; expected 7 spaces but found 1 space [phpcodesniffer]
14: Equals sign not aligned with surrounding assignments; expected 2 spaces but found 1 space [phpcodesniffer]
14: Expected 1 space after "="; 2 found [phpcodesniffer]
14: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
15: Equals sign not aligned with surrounding assignments; expected 15 spaces but found 1 space [phpcodesniffer]
15: Expected 1 space after "="; 2 found [phpcodesniffer]
15: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
17: Expected 1 space before opening brace; found 0 [phpcodesniffer]
17: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
18: Expected 1 spaces after opening bracket; 0 found [phpcodesniffer]
18: Equals sign not aligned with surrounding assignments; expected 6 spaces but found 1 space [phpcodesniffer]
18: Expected 1 spaces before closing bracket; 0 found [phpcodesniffer]
18: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
19: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
20: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
20: Equals sign not aligned with surrounding assignments; expected 14 spaces but found 1 space [phpcodesniffer]
20: Concat operator must be surrounded by a single space [phpcodesniffer]
20: Expected 1 space after "="; 2 found [phpcodesniffer]
22: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
24-55: Function `get_files` has a Cognitive Complexity of 19 (exceeds 5 allowed). Consider refactoring. [structure]
26: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
26: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
26: Assignments must be the first block of code on a line [phpcodesniffer]
28: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
28: Assignments must be the first block of code on a line [phpcodesniffer]
28: No space before closing parenthesis is prohibited [phpcodesniffer]
28: No space after opening parenthesis is prohibited [phpcodesniffer]
28: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
28: Use Yoda Condition checks, you must. [phpcodesniffer]
28: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
28: Use Yoda Condition checks, you must. [phpcodesniffer]
28: Newline required after opening brace [phpcodesniffer]
30: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
30: Expected 1 spaces after opening bracket; 0 found [phpcodesniffer]
32: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
34: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
35: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
37: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
38: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
39: Equals sign not aligned with surrounding assignments; expected 5 spaces but found 1 space [phpcodesniffer]
39: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
40: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
41: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
42: Inline control structures are not allowed [phpcodesniffer]
42: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
42: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
43: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
44: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
46: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
48: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
49: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
50: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
50: Blank line found after control structure [phpcodesniffer]
52: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
53: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
54: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
55: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
62-200: Method `process_hooks` has 105 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
62-200: Function `process_hooks` has a Cognitive Complexity of 46 (exceeds 5 allowed). Consider refactoring. [structure]
64: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
67: Spaces must be used for mid-line alignment; tabs are not allowed [phpcodesniffer]
67: Equals sign not aligned with surrounding assignments; expected 3 spaces but found 5 spaces [phpcodesniffer]
67: Concat operator must be surrounded by a single space [phpcodesniffer]
68: Spaces must be used for mid-line alignment; tabs are not allowed [phpcodesniffer]
68: Equals sign not aligned with surrounding assignments; expected 1 space but found 3 spaces [phpcodesniffer]
70: Spaces must be used for mid-line alignment; tabs are not allowed [phpcodesniffer]
70: Concat operator must be surrounded by a single space [phpcodesniffer]
70: Equals sign not aligned with surrounding assignments; expected 1 space but found 4 spaces [phpcodesniffer]
71: Spaces must be used for mid-line alignment; tabs are not allowed [phpcodesniffer]
71: Equals sign not aligned with surrounding assignments; expected 4 spaces but found 7 spaces [phpcodesniffer]
71: Concat operator must be surrounded by a single space [phpcodesniffer]
72: Spaces must be used for mid-line alignment; tabs are not allowed [phpcodesniffer]
72: Concat operator must be surrounded by a single space [phpcodesniffer]
72: Equals sign not aligned with surrounding assignments; expected 5 spaces but found 8 spaces [phpcodesniffer]
73: Spaces must be used for mid-line alignment; tabs are not allowed [phpcodesniffer]
73: Equals sign not aligned with surrounding assignments; expected 5 spaces but found 8 spaces [phpcodesniffer]
73: Concat operator must be surrounded by a single space [phpcodesniffer]
74: Spaces must be used for mid-line alignment; tabs are not allowed [phpcodesniffer]
74: Equals sign not aligned with surrounding assignments; expected 5 spaces but found 8 spaces [phpcodesniffer]
75: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
75: Concat operator must be surrounded by a single space [phpcodesniffer]
75: Each array item in a multi-line array declaration must end in a comma [phpcodesniffer]
101: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
101: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
102: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
103: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
105: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
107: file_get_contents() is highly discouraged, please use wpcom_vip_file_get_contents() instead. [phpcodesniffer]
107: Equals sign not aligned with surrounding assignments; expected 11 spaces but found 13 spaces [phpcodesniffer]
107: file_get_contents() is discouraged. Use wp_remote_get() for remote URLs instead. [phpcodesniffer]
108: Equals sign not aligned with surrounding assignments; expected 7 spaces but found 9 spaces [phpcodesniffer]
109: Equals sign not aligned with surrounding assignments; expected 4 spaces but found 6 spaces [phpcodesniffer]
110: Equals sign not aligned with surrounding assignments; expected 1 space but found 3 spaces [phpcodesniffer]
114: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
114: Use Yoda Condition checks, you must. [phpcodesniffer]
116: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
116: Use Yoda Condition checks, you must. [phpcodesniffer]
118: Use Yoda Condition checks, you must. [phpcodesniffer]
120: Use Yoda Condition checks, you must. [phpcodesniffer]
124: There must be no space before the colon in a CASE statement [phpcodesniffer]
126: Terminating statement must be indented to the same level as the CASE body [phpcodesniffer]
127: There must be no space before the colon in a CASE statement [phpcodesniffer]
129: Terminating statement must be indented to the same level as the CASE body [phpcodesniffer]
130: There must be no space before the colon in a CASE statement [phpcodesniffer]
131: There must be no space before the colon in a CASE statement [phpcodesniffer]
136: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
141: Each array item in a multi-line array declaration must end in a comma [phpcodesniffer]
144: Terminating statement must be indented to the same level as the CASE body [phpcodesniffer]
161: All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$heading'. [phpcodesniffer]
167: All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'self'. [phpcodesniffer]
167: All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$details'. [phpcodesniffer]
168: All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found '$details'. [phpcodesniffer]
169: All output should be run through an escaping function (see the Security sections in the WordPress Developer Handbooks), found 'array_unique'. [phpcodesniffer]
178: Functions must not contain multiple empty lines in a row; found 3 empty lines [phpcodesniffer]
181: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
182: Expected 1 spaces after opening bracket; 2 found [phpcodesniffer]
182: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
184: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
184: file_get_contents() is highly discouraged, please use wpcom_vip_file_get_contents() instead. [phpcodesniffer]
184: file_get_contents() is discouraged. Use wp_remote_get() for remote URLs instead. [phpcodesniffer]
190: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
191: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
191: Expected 1 space after IF keyword; 0 found [phpcodesniffer]
191: Space after opening control structure is required [phpcodesniffer]
191: No space before opening parenthesis is prohibited [phpcodesniffer]
191: Expected exactly one space before closing parenthesis; "  " found. [phpcodesniffer]
191: Expected 1 spaces before closing bracket; 2 found [phpcodesniffer]
191: Expected 1 space after closing parenthesis; found 0 [phpcodesniffer]
191: Space between opening control structure and closing parenthesis is required [phpcodesniffer]
193: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
193: Filesystem writes are forbidden, you should not be using unlink() [phpcodesniffer]
195: Tabs must be used to indent lines; spaces are not allowed [phpcodesniffer]
197: File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: file_put_contents() [phpcodesniffer]
197: Expected 1 spaces after opening bracket; 2 found [phpcodesniffer]
197: Filesystem writes are forbidden, you should not be using file_put_contents() [phpcodesniffer]
197: Space found before comma in function call [phpcodesniffer]

== apigen/theme-sensei/js/jquery.autocomplete.js (13 issues) ==
1-842: File `jquery.autocomplete.js` has 692 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
55-431: Function `Autocompleter` has 310 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
218-251: Function `selectCurrent` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
358-408: Function `request` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
463-595: Function `Cache` has 92 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
484-534: Function `populate` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
548-593: Function `load` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
584-586: Avoid deeply nested control flow statements. [structure]
592: Avoid too many `return` statements within this function. [structure]
597-795: Function `Select` has 178 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
611-648: Function `init` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
678-685: Consider simplifying this complex logical expression. [structure]
797-839: Function `selection` has 41 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== apigen/theme-sensei/js/jquery.cookie.js (1 issue) ==
32-78: Function `cookie` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== assets/chosen/ajax-chosen.jquery.js (1 issue) ==
4-80: Function `ajaxChosen` has 75 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== assets/chosen/chosen.jquery.js (11 issues) ==
1-1167: File `chosen.jquery.js` has 1042 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
49-76: Function `add_option` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
295-351: Function `winnow_results` has 54 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
329-333: Avoid deeply nested control flow statements. [structure]
334-336: Avoid deeply nested control flow statements. [structure]
337-339: Avoid deeply nested control flow statements. [structure]
395-430: Function `keyup_checker` has 33 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
513-557: Function `set_up_html` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
559-616: Function `register_observers` has 55 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
923-967: Function `result_select` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1101-1131: Function `keydown_checker` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== assets/js/admin/lesson-quick-edit.js (1 issue) ==
5-53: Function `edit` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== assets/js/admin/testharness.js (2 issues) ==
32-61: Function `render` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
64-91: Function `requestDispatcher` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== assets/js/grading-general.js (2 issues) ==
20-60: Function `calculateTotalGrade` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
66-104: Function `autoGrade` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== assets/js/learners-bulk-actions.js (2 issues) ==
20-119: Function `bulkUserActions` has 94 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
68-113: Function `validator` has 43 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== assets/js/lesson-metadata.js (5 issues) ==
1-1415: File `lesson-metadata.js` has 961 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
58: Avoid too many `return` statements within this function. [structure]
99-149: Function `checkQuizGradeType` has 40 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
319-368: Function `uploadQuestionMedia` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
427-496: Function `filterExistingQuestions` has 56 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== assets/vendor/jquery-modal-0.8.0/jquery.modal.js (1 issue) ==
32-78: Function `modal` has 43 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== assets/vendor/select2/select2.full.js (44 issues) ==
1-6458: File `select2.full.js` has 4857 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
38-6444: Function `S2` has 4831 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
44-482: Consider simplifying this complex logical expression. [structure]
77-185: Function `normalize` has 66 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
120-125: Avoid deeply nested control flow statements. [structure]
143-157: Avoid deeply nested control flow statements. [structure]
548-609: Function `Decorate` has 39 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
946-1018: Function `option` has 51 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1020-1246: Function `bind` has 164 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1365-1423: Function `bind` has 40 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1873-1992: Function `bind` has 75 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3069-3107: Function `select` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3196-3237: Function `option` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3239-3283: Function `item` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3355-3401: Function `convertToOptions` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3447-3511: Function `query` has 47 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3548-3609: Function `query` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3558-3606: Function `wrapper` has 33 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3665-3712: Function `query` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3714-3757: Function `tokenizer` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3925-3981: Function `bind` has 38 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
4068-4102: Function `bind` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
4257-4332: Function `_positionDropdown` has 52 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
4586-4826: Function `apply` has 191 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
4828-4909: Function `reset` has 57 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
4880: Avoid too many `return` statements within this function. [structure]
4952-5037: Function `fromElement` has 66 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
5056-5136: Function `Select2` has 44 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
5167-5212: Function `_resolveWidth` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
5194: Avoid too many `return` statements within this function. [structure]
5204: Avoid too many `return` statements within this function. [structure]
5208: Avoid too many `return` statements within this function. [structure]
5211: Avoid too many `return` statements within this function. [structure]
5222-5276: Function `_registerDomEvents` has 47 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
5323-5403: Function `_registerEvents` has 63 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
5419-5457: Function `_syncSubtree` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
5601-5639: Function `destroy` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
5718-5759: Function `render` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
5775-5816: Function `render` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
5884-5919: Function `current` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
6086-6115: Function `bind` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
6125-6154: Function `bind` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
6251-6362: Function `handler` has 69 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
6392-6429: Function `select2` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/admin/class-sensei-extensions.php (10 issues) ==
99-120: Function `get_resources` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
129-150: Function `get_messages` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
170: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
170: Processing form data without nonce verification. [phpcodesniffer]
170: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
170: Missing wp_unslash() before sanitization. [phpcodesniffer]
173: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
173: Processing form data without nonce verification. [phpcodesniffer]
173: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
173: Missing wp_unslash() before sanitization. [phpcodesniffer]

== includes/admin/class-sensei-learner-management.php (94 issues) ==
1-730: File `class-sensei-learner-management.php` has 430 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
26-722: `Sensei_Learner_Management` has 23 functions (exceeds 20 allowed). Consider refactoring. [structure]
65-95: Function `__construct` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
76: Processing form data without nonce verification. [phpcodesniffer]
76: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
76: Processing form data without nonce verification. [phpcodesniffer]
76: Processing form data without nonce verification. [phpcodesniffer]
76: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
76: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
150-185: Method `enqueue_scripts` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
247-279: Method `learners_page` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
248: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
248: Processing form data without nonce verification. [phpcodesniffer]
248: Missing wp_unslash() before sanitization. [phpcodesniffer]
248: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
248: Processing form data without nonce verification. [phpcodesniffer]
248: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
256: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
256: Processing form data without nonce verification. [phpcodesniffer]
257: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
259: Processing form data without nonce verification. [phpcodesniffer]
259: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
260: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
318-354: Method `learners_default_nav` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
320: Processing form data without nonce verification. [phpcodesniffer]
320: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
321: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
332: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
332: Processing form data without nonce verification. [phpcodesniffer]
333: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
363: Missing wp_unslash() before sanitization. [phpcodesniffer]
363: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
363: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
363: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
387-439: Function `edit_date_started` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
387-439: Method `edit_date_started` has 39 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
390: Missing wp_unslash() before sanitization. [phpcodesniffer]
390: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
390: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
446-516: Function `handle_reset_remove_user_post` has a Cognitive Complexity of 19 (exceeds 5 allowed). Consider refactoring. [structure]
446-516: Method `handle_reset_remove_user_post` has 51 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
450: Missing wp_unslash() before sanitization. [phpcodesniffer]
450: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
450: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
535-583: Method `json_search_users` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
535-583: Function `json_search_users` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
539: Missing wp_unslash() before sanitization. [phpcodesniffer]
539: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
539: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
539: Detected usage of a non-validated input variable: $_GET [phpcodesniffer]
545: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
545: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
545: Missing wp_unslash() before sanitization. [phpcodesniffer]
545: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
590-659: Method `add_new_learners` has 47 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
590-659: Function `add_new_learners` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
594: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
598: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
598: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
598: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
598: Missing wp_unslash() before sanitization. [phpcodesniffer]
602: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
602: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
602: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
602: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
602: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
606: Missing wp_unslash() before sanitization. [phpcodesniffer]
606: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
606: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
607: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
608: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
609: Missing wp_unslash() before sanitization. [phpcodesniffer]
609: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
609: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
609: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
616: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
616: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
624: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
624: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
664-684: Function `add_learner_notices` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
665: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
665: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
665: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
665: Processing form data without nonce verification. [phpcodesniffer]
665: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
665: Processing form data without nonce verification. [phpcodesniffer]
665: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
665: Processing form data without nonce verification. [phpcodesniffer]
665: Missing wp_unslash() before sanitization. [phpcodesniffer]
665: Processing form data without nonce verification. [phpcodesniffer]
666: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
666: Processing form data without nonce verification. [phpcodesniffer]
668: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
668: Processing form data without nonce verification. [phpcodesniffer]

== includes/admin/views/html-admin-page-extensions-categories.php (12 issues) ==
18: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
18: Processing form data without nonce verification. [phpcodesniffer]
18: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
18: Processing form data without nonce verification. [phpcodesniffer]
18: Missing wp_unslash() before sanitization. [phpcodesniffer]
18: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
21: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
21: Processing form data without nonce verification. [phpcodesniffer]
21: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
21: Processing form data without nonce verification. [phpcodesniffer]
21: Missing wp_unslash() before sanitization. [phpcodesniffer]
21: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]

== includes/class-sensei-admin-rest-api-testharness.php (8 issues) ==
31: Detected access of super global var $_COOKIE, probably needs manual inspection. [phpcodesniffer]
31: Due to using Batcache, server side based client related logic will not work, use JS instead. [phpcodesniffer]
56: Processing form data without nonce verification. [phpcodesniffer]
56: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
56: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
56: Processing form data without nonce verification. [phpcodesniffer]
56: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
72: urlencode() should only be used when dealing with legacy applications rawurlencode() should now be used instead. See http://php.net/manual/en/function.rawurlencode.php and http://www.faqs.org/rfcs/rfc3986.html [phpcodesniffer]

== includes/class-sensei-admin.php (239 issues) ==
1-1829: File `class-sensei-admin.php` has 1163 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
13-1820: `Sensei_Admin` has 44 functions (exceeds 20 allowed). Consider refactoring. [structure]
30-88: Method `__construct` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
129: Not using strict comparison for array_search; supply true for third argument. [phpcodesniffer]
134: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
138: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
154-183: Function `admin_menu_highlight` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
163: Use Yoda Condition checks, you must. [phpcodesniffer]
163: Use Yoda Condition checks, you must. [phpcodesniffer]
163: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
163: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
167: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
167: Use Yoda Condition checks, you must. [phpcodesniffer]
167: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
167: Use Yoda Condition checks, you must. [phpcodesniffer]
172: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
172: Use Yoda Condition checks, you must. [phpcodesniffer]
172: Use Yoda Condition checks, you must. [phpcodesniffer]
172: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
177: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
192: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
192: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
192: Processing form data without nonce verification. [phpcodesniffer]
192: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
192: Processing form data without nonce verification. [phpcodesniffer]
192: Use Yoda Condition checks, you must. [phpcodesniffer]
208: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
208: Processing form data without nonce verification. [phpcodesniffer]
208: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
208: Processing form data without nonce verification. [phpcodesniffer]
208: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
237: Usage of a direct database call is discouraged. [phpcodesniffer]
237: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
301: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
301: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
301: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
301: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
301: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
301: Processing form data without nonce verification. [phpcodesniffer]
301: Missing wp_unslash() before sanitization. [phpcodesniffer]
301-306: Consider simplifying this complex logical expression. [structure]
301: Processing form data without nonce verification. [phpcodesniffer]
331: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
358: Found precision alignment of 3 spaces. [phpcodesniffer]
421-435: Function `admin_notices_styles` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
424: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
428: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
428: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
428: Processing form data without nonce verification. [phpcodesniffer]
428: Processing form data without nonce verification. [phpcodesniffer]
428: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
430: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
430: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
430: Processing form data without nonce verification. [phpcodesniffer]
430: Processing form data without nonce verification. [phpcodesniffer]
430: Use Yoda Condition checks, you must. [phpcodesniffer]
474: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
518-561: Function `duplicate_content` has a Cognitive Complexity of 15 (exceeds 5 allowed). Consider refactoring. [structure]
518-561: Method `duplicate_content` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
519: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
524: Processing form data without nonce verification. [phpcodesniffer]
524: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
524: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
524: Missing wp_unslash() before sanitization. [phpcodesniffer]
545: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
549: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
613: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
614: Detected usage of meta_key, possible slow query. [phpcodesniffer]
615: Detected usage of meta_value, possible slow query. [phpcodesniffer]
618: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
636-712: Method `duplicate_post` has 57 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
636-712: Function `duplicate_post` has a Cognitive Complexity of 36 (exceeds 5 allowed). Consider refactoring. [structure]
641: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
686: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
719-758: Method `lesson_filter_options` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
722: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
727: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
732: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
734: Missing wp_unslash() before sanitization. [phpcodesniffer]
734: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
734: Processing form data without nonce verification. [phpcodesniffer]
734: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
734: Processing form data without nonce verification. [phpcodesniffer]
734: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
769: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
770: Processing form data without nonce verification. [phpcodesniffer]
770: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
770: Processing form data without nonce verification. [phpcodesniffer]
770: Missing wp_unslash() before sanitization. [phpcodesniffer]
770: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
770: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
773: Detected usage of meta_key, possible slow query. [phpcodesniffer]
774: Detected usage of meta_value, possible slow query. [phpcodesniffer]
788-816: Function `glance_items` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
829: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
836: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
837: Detected usage of meta_key, possible slow query. [phpcodesniffer]
838: Detected usage of meta_value, possible slow query. [phpcodesniffer]
841: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
861-1097: Function `render_settings` has a Cognitive Complexity of 82 (exceeds 5 allowed). Consider refactoring. [structure]
861-1097: Method `render_settings` has 190 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
865: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
900: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
915: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
966: strip_tags() is discouraged. Use the more comprehensive wp_strip_all_tags() instead. [phpcodesniffer]
971: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
973: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
977: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
997: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1016: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1040: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1059: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1084: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1088: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1107: Missing wp_unslash() before sanitization. [phpcodesniffer]
1107: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1107: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1107: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1108: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1108: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1108: Missing wp_unslash() before sanitization. [phpcodesniffer]
1111: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1130-1239: Function `course_order_screen` has a Cognitive Complexity of 27 (exceeds 5 allowed). Consider refactoring. [structure]
1130-1239: Method `course_order_screen` has 88 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1138: Line indented incorrectly; expected 8 tabs, found 7 [phpcodesniffer]
1138: Found precision alignment of 2 spaces. [phpcodesniffer]
1142: Processing form data without nonce verification. [phpcodesniffer]
1142: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1142: Processing form data without nonce verification. [phpcodesniffer]
1142: Missing wp_unslash() before sanitization. [phpcodesniffer]
1142: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1142: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1182: Use Yoda Condition checks, you must. [phpcodesniffer]
1182: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1184: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1184: Use Yoda Condition checks, you must. [phpcodesniffer]
1186: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1186: Use Yoda Condition checks, you must. [phpcodesniffer]
1191: Use Yoda Condition checks, you must. [phpcodesniffer]
1212: Array double arrow not aligned correctly; expected 2 space(s) between "'form'" and double arrow, but found 3. [phpcodesniffer]
1276: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1277: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
1277: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1277: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1277: Missing wp_unslash() before sanitization. [phpcodesniffer]
1277: Missing wp_unslash() before sanitization. [phpcodesniffer]
1277: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1277: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1280: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1287: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1287: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1287: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
1287: Missing wp_unslash() before sanitization. [phpcodesniffer]
1300-1519: Method `lesson_order_screen` has 177 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1300-1519: Function `lesson_order_screen` has a Cognitive Complexity of 91 (exceeds 5 allowed). Consider refactoring. [structure]
1308: Found precision alignment of 2 spaces. [phpcodesniffer]
1308: Line indented incorrectly; expected 8 tabs, found 7 [phpcodesniffer]
1312: Missing wp_unslash() before sanitization. [phpcodesniffer]
1312: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1312: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1312: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1312: Processing form data without nonce verification. [phpcodesniffer]
1312: Processing form data without nonce verification. [phpcodesniffer]
1321: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1325: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1333: Found precision alignment of 2 spaces. [phpcodesniffer]
1334: Found precision alignment of 2 spaces. [phpcodesniffer]
1335: Processing form data without nonce verification. [phpcodesniffer]
1335: Found precision alignment of 2 spaces. [phpcodesniffer]
1335: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1336: Found precision alignment of 2 spaces. [phpcodesniffer]
1336: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1345: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1345: Processing form data without nonce verification. [phpcodesniffer]
1346: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1363: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1364: Detected usage of meta_query, possible slow query. [phpcodesniffer]
1371: Detected usage of tax_query, possible slow query. [phpcodesniffer]
1378: Detected usage of meta_key, possible slow query. [phpcodesniffer]
1384: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1394: Use Yoda Condition checks, you must. [phpcodesniffer]
1394: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1396: Use Yoda Condition checks, you must. [phpcodesniffer]
1396: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1398: Use Yoda Condition checks, you must. [phpcodesniffer]
1398: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1447: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1447: Use Yoda Condition checks, you must. [phpcodesniffer]
1449: Use Yoda Condition checks, you must. [phpcodesniffer]
1451: Use Yoda Condition checks, you must. [phpcodesniffer]
1451: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1462: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1509: Array double arrow not aligned correctly; expected 1 space(s) between "'class'" and double arrow, but found 10. [phpcodesniffer]
1523: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1523: Processing form data without nonce verification. [phpcodesniffer]
1523: Processing form data without nonce verification. [phpcodesniffer]
1523: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1537-1584: Function `save_lesson_order` has a Cognitive Complexity of 25 (exceeds 5 allowed). Consider refactoring. [structure]
1537-1584: Method `save_lesson_order` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1551: Missing wp_unslash() before sanitization. [phpcodesniffer]
1551: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1551: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1551: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1551: Processing form data without nonce verification. [phpcodesniffer]
1551: Processing form data without nonce verification. [phpcodesniffer]
1554: Missing wp_unslash() before sanitization. [phpcodesniffer]
1554: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1554: Processing form data without nonce verification. [phpcodesniffer]
1554: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1589: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1594-1642: Method `wp_nav_menu_item_sensei_links_meta_box` has 41 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1652: Processing form data without nonce verification. [phpcodesniffer]
1652: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1653: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1653: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1653: Missing wp_unslash() before sanitization. [phpcodesniffer]
1653: Processing form data without nonce verification. [phpcodesniffer]
1655: add_user_meta() usage is highly discouraged, check VIP documentation on "Working with wp_users" [phpcodesniffer]
1669-1716: Function `install_pages` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
1672: Processing form data without nonce verification. [phpcodesniffer]
1672: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1673: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1673: Processing form data without nonce verification. [phpcodesniffer]
1674: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1685: Missing wp_unslash() before sanitization. [phpcodesniffer]
1685: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1685: Processing form data without nonce verification. [phpcodesniffer]
1685: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1685: Processing form data without nonce verification. [phpcodesniffer]
1685: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1695: Processing form data without nonce verification. [phpcodesniffer]
1695: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1695: Processing form data without nonce verification. [phpcodesniffer]
1695: Missing wp_unslash() before sanitization. [phpcodesniffer]
1695: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1695: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1712: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1726-1748: Function `remove_trashed_course_from_course_order` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
1741: Not using strict comparison for array_search; supply true for third argument. [phpcodesniffer]

== includes/class-sensei-analysis-course-list-table.php (85 issues) ==
1-730: File `class-sensei-analysis-course-list-table.php` has 512 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
30: Missing wp_unslash() before sanitization. [phpcodesniffer]
30: Processing form data without nonce verification. [phpcodesniffer]
30: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
30: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
30: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
30: Processing form data without nonce verification. [phpcodesniffer]
31: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
31: Processing form data without nonce verification. [phpcodesniffer]
31: Missing wp_unslash() before sanitization. [phpcodesniffer]
31: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
56-98: Method `get_columns` has 33 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
106-148: Method `get_sortable_columns` has 33 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
156-219: Function `prepare_items` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
156-219: Method `prepare_items` has 50 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
161: Processing form data without nonce verification. [phpcodesniffer]
161: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
162: Processing form data without nonce verification. [phpcodesniffer]
162: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
162: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
162: Missing wp_unslash() before sanitization. [phpcodesniffer]
163: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
163: Missing wp_unslash() before sanitization. [phpcodesniffer]
163: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
163: Processing form data without nonce verification. [phpcodesniffer]
169: Processing form data without nonce verification. [phpcodesniffer]
169: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
170: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
170: Processing form data without nonce verification. [phpcodesniffer]
170: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
170: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
170: Missing wp_unslash() before sanitization. [phpcodesniffer]
175: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
175: Processing form data without nonce verification. [phpcodesniffer]
176: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
176: Missing wp_unslash() before sanitization. [phpcodesniffer]
176: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
176: Processing form data without nonce verification. [phpcodesniffer]
227-287: Function `generate_report` has a Cognitive Complexity of 11 (exceeds 5 allowed). Consider refactoring. [structure]
227-287: Method `generate_report` has 43 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
235: Processing form data without nonce verification. [phpcodesniffer]
235: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
236: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
236: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
236: Missing wp_unslash() before sanitization. [phpcodesniffer]
236: Processing form data without nonce verification. [phpcodesniffer]
237: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
237: Processing form data without nonce verification. [phpcodesniffer]
237: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
237: Missing wp_unslash() before sanitization. [phpcodesniffer]
243: Processing form data without nonce verification. [phpcodesniffer]
243: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
244: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
244: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
244: Processing form data without nonce verification. [phpcodesniffer]
244: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
244: Missing wp_unslash() before sanitization. [phpcodesniffer]
249: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
249: Processing form data without nonce verification. [phpcodesniffer]
250: Missing wp_unslash() before sanitization. [phpcodesniffer]
250: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
250: Processing form data without nonce verification. [phpcodesniffer]
250: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
295-504: Function `get_row_data` has a Cognitive Complexity of 34 (exceeds 5 allowed). Consider refactoring. [structure]
295-504: Method `get_row_data` has 169 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
302: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
357: Assignments must be the first block of code on a line [phpcodesniffer]
357: Assignments must be the first block of code on a line [phpcodesniffer]
357: Assignments must be the first block of code on a line [phpcodesniffer]
371: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
376: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
381: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
386: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
391: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
395: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
432: Expected 1 space after closing brace; newline found [phpcodesniffer]
454: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
460: Detected usage of meta_key, possible slow query. [phpcodesniffer]
512-564: Method `get_course_statuses` has 40 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
578: Detected usage of meta_key, possible slow query. [phpcodesniffer]
580: Detected usage of meta_query, possible slow query. [phpcodesniffer]
593: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
629-670: Method `data_table_header` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
629-670: Function `data_table_header` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
644: Assignments must be the first block of code on a line [phpcodesniffer]

== includes/class-sensei-analysis-lesson-list-table.php (59 issues) ==
80-134: Function `prepare_items` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
80-134: Method `prepare_items` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
85: Processing form data without nonce verification. [phpcodesniffer]
85: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
86: Processing form data without nonce verification. [phpcodesniffer]
86: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
86: Missing wp_unslash() before sanitization. [phpcodesniffer]
86: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
87: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
87: Missing wp_unslash() before sanitization. [phpcodesniffer]
87: Processing form data without nonce verification. [phpcodesniffer]
87: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
93: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
93: Processing form data without nonce verification. [phpcodesniffer]
94: Missing wp_unslash() before sanitization. [phpcodesniffer]
94: Processing form data without nonce verification. [phpcodesniffer]
94: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
94: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
94: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
99: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
99: Processing form data without nonce verification. [phpcodesniffer]
100: Missing wp_unslash() before sanitization. [phpcodesniffer]
100: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
100: Processing form data without nonce verification. [phpcodesniffer]
100: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
142-193: Function `generate_report` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
142-193: Method `generate_report` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
150: Processing form data without nonce verification. [phpcodesniffer]
150: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
151: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
151: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
151: Missing wp_unslash() before sanitization. [phpcodesniffer]
151: Processing form data without nonce verification. [phpcodesniffer]
152: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
152: Processing form data without nonce verification. [phpcodesniffer]
152: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
152: Missing wp_unslash() before sanitization. [phpcodesniffer]
158: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
158: Processing form data without nonce verification. [phpcodesniffer]
159: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
159: Missing wp_unslash() before sanitization. [phpcodesniffer]
159: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
159: Processing form data without nonce verification. [phpcodesniffer]
159: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
164: Processing form data without nonce verification. [phpcodesniffer]
164: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
165: Missing wp_unslash() before sanitization. [phpcodesniffer]
165: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
165: Processing form data without nonce verification. [phpcodesniffer]
165: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
201-275: Method `get_row_data` has 59 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
201-275: Function `get_row_data` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
204: Assignments must be the first block of code on a line [phpcodesniffer]
206: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
211: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
216: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
221: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
226: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
283-335: Method `get_lesson_statuses` has 40 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/class-sensei-analysis-overview-list-table.php (80 issues) ==
1-783: File `class-sensei-analysis-overview-list-table.php` has 540 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
25: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
43-82: Method `get_columns` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
90-129: Method `get_sortable_columns` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
137-199: Function `prepare_items` has a Cognitive Complexity of 11 (exceeds 5 allowed). Consider refactoring. [structure]
137-199: Method `prepare_items` has 48 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
142: Processing form data without nonce verification. [phpcodesniffer]
142: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
143: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
143: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
143: Processing form data without nonce verification. [phpcodesniffer]
143: Missing wp_unslash() before sanitization. [phpcodesniffer]
144: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
144: Missing wp_unslash() before sanitization. [phpcodesniffer]
144: Processing form data without nonce verification. [phpcodesniffer]
144: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
150: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
150: Processing form data without nonce verification. [phpcodesniffer]
151: Processing form data without nonce verification. [phpcodesniffer]
151: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
151: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
151: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
151: Missing wp_unslash() before sanitization. [phpcodesniffer]
171: Processing form data without nonce verification. [phpcodesniffer]
171: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
171: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
171: Processing form data without nonce verification. [phpcodesniffer]
172: Missing wp_unslash() before sanitization. [phpcodesniffer]
172: Processing form data without nonce verification. [phpcodesniffer]
172: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
172: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
207-266: Function `generate_report` has a Cognitive Complexity of 12 (exceeds 5 allowed). Consider refactoring. [structure]
207-266: Method `generate_report` has 41 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
215: Processing form data without nonce verification. [phpcodesniffer]
215: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
216: Processing form data without nonce verification. [phpcodesniffer]
216: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
216: Missing wp_unslash() before sanitization. [phpcodesniffer]
216: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
217: Missing wp_unslash() before sanitization. [phpcodesniffer]
217: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
217: Processing form data without nonce verification. [phpcodesniffer]
217: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
223: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
223: Processing form data without nonce verification. [phpcodesniffer]
224: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
224: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
224: Processing form data without nonce verification. [phpcodesniffer]
224: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
224: Missing wp_unslash() before sanitization. [phpcodesniffer]
233: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
233: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
233: Processing form data without nonce verification. [phpcodesniffer]
233: Processing form data without nonce verification. [phpcodesniffer]
234: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
234: Processing form data without nonce verification. [phpcodesniffer]
234: Missing wp_unslash() before sanitization. [phpcodesniffer]
234: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
275-500: Method `get_row_data` has 184 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
275-500: Function `get_row_data` has a Cognitive Complexity of 22 (exceeds 5 allowed). Consider refactoring. [structure]
303: Detected usage of meta_key, possible slow query. [phpcodesniffer]
367: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
373: Detected usage of meta_key, possible slow query. [phpcodesniffer]
450: Detected usage of meta_key, possible slow query. [phpcodesniffer]
520: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
552: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
603-653: Method `stats_boxes` has 38 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
620: Detected usage of meta_key, possible slow query. [phpcodesniffer]
645: Array double arrow not aligned correctly; expected 11 space(s) between ")" and double arrow, but found 15. [phpcodesniffer]
646: Array double arrow not aligned correctly; expected 11 space(s) between ")" and double arrow, but found 15. [phpcodesniffer]
647: Array double arrow not aligned correctly; expected 10 space(s) between ")" and double arrow, but found 14. [phpcodesniffer]
649: Array double arrow not aligned correctly; expected 11 space(s) between ")" and double arrow, but found 15. [phpcodesniffer]
650: Array double arrow not aligned correctly; expected 1 space(s) between ")" and double arrow, but found 5. [phpcodesniffer]
663: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
678-716: Method `data_table_header` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
678-716: Function `data_table_header` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
684: Assignments must be the first block of code on a line [phpcodesniffer]
684: Assignments must be the first block of code on a line [phpcodesniffer]
698: Assignments must be the first block of code on a line [phpcodesniffer]
698: Assignments must be the first block of code on a line [phpcodesniffer]

== includes/class-sensei-analysis-user-profile-list-table.php (54 issues) ==
79-133: Function `prepare_items` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
79-133: Method `prepare_items` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
84: Processing form data without nonce verification. [phpcodesniffer]
84: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
85: Processing form data without nonce verification. [phpcodesniffer]
85: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
85: Missing wp_unslash() before sanitization. [phpcodesniffer]
85: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
86: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
86: Missing wp_unslash() before sanitization. [phpcodesniffer]
86: Processing form data without nonce verification. [phpcodesniffer]
86: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
92: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
92: Processing form data without nonce verification. [phpcodesniffer]
93: Missing wp_unslash() before sanitization. [phpcodesniffer]
93: Processing form data without nonce verification. [phpcodesniffer]
93: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
93: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
93: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
98: Processing form data without nonce verification. [phpcodesniffer]
98: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
99: Missing wp_unslash() before sanitization. [phpcodesniffer]
99: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
99: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
99: Processing form data without nonce verification. [phpcodesniffer]
141-192: Method `generate_report` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
141-192: Function `generate_report` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
149: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
149: Processing form data without nonce verification. [phpcodesniffer]
150: Missing wp_unslash() before sanitization. [phpcodesniffer]
150: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
150: Processing form data without nonce verification. [phpcodesniffer]
150: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
151: Processing form data without nonce verification. [phpcodesniffer]
151: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
151: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
151: Missing wp_unslash() before sanitization. [phpcodesniffer]
157: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
157: Processing form data without nonce verification. [phpcodesniffer]
158: Processing form data without nonce verification. [phpcodesniffer]
158: Missing wp_unslash() before sanitization. [phpcodesniffer]
158: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
158: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
158: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
163: Processing form data without nonce verification. [phpcodesniffer]
163: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
164: Processing form data without nonce verification. [phpcodesniffer]
164: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
164: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
164: Missing wp_unslash() before sanitization. [phpcodesniffer]
200-256: Method `get_row_data` has 43 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
200-256: Function `get_row_data` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
206: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
264-305: Method `get_course_statuses` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/class-sensei-analysis.php (72 issues) ==
1-700: File `class-sensei-analysis.php` has 406 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
13-692: `Sensei_Analysis` has 26 functions (exceeds 20 allowed). Consider refactoring. [structure]
34: Processing form data without nonce verification. [phpcodesniffer]
34: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
34: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
34: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
34: Processing form data without nonce verification. [phpcodesniffer]
127-162: Function `analysis_page` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
127-162: Method `analysis_page` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
132: Processing form data without nonce verification. [phpcodesniffer]
132: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
133: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
135: Processing form data without nonce verification. [phpcodesniffer]
135: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
136: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
138: Processing form data without nonce verification. [phpcodesniffer]
138: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
139: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
141: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
141: Processing form data without nonce verification. [phpcodesniffer]
141: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
141: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
141: Processing form data without nonce verification. [phpcodesniffer]
141: Missing wp_unslash() before sanitization. [phpcodesniffer]
146: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
388: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
392: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
424: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
424: Processing form data without nonce verification. [phpcodesniffer]
424: Processing form data without nonce verification. [phpcodesniffer]
424: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
426: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
451-482: Method `analysis_user_course_nav` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
454: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
454: Processing form data without nonce verification. [phpcodesniffer]
454: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
454: Processing form data without nonce verification. [phpcodesniffer]
455: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
468: Processing form data without nonce verification. [phpcodesniffer]
468: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
469: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
493: Processing form data without nonce verification. [phpcodesniffer]
493: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
494: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
518: Processing form data without nonce verification. [phpcodesniffer]
518: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
519: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
543: Processing form data without nonce verification. [phpcodesniffer]
543: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
544: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
574-629: Method `report_download_page` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
574-629: Function `report_download_page` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
576: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
577: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
577: Missing wp_unslash() before sanitization. [phpcodesniffer]
580: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
580: Detected usage of a non-validated input variable: $_REQUEST [phpcodesniffer]
580: Missing wp_unslash() before sanitization. [phpcodesniffer]
580: Detected usage of a non-sanitized input variable: $_REQUEST [phpcodesniffer]
589: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
590: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
592: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
593: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
595: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
596: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
598: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
598: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
598: Missing wp_unslash() before sanitization. [phpcodesniffer]
598: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
670: File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: fopen() [phpcodesniffer]
672: Filesystem writes are forbidden, you should not be using fputcsv() [phpcodesniffer]
674: File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: fclose() [phpcodesniffer]

== includes/class-sensei-autoloader.php (2 issues) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-autoloader-bundle.php, but found class-sensei-autoloader.php. [phpcodesniffer]
119-191: Method `initialize_class_file_map` has 41 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/class-sensei-core-lesson-modules.php (1 issue) ==
43-77: Function `set_module` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]

== includes/class-sensei-course-results.php (1 issue) ==
69: get_page_by_path() is prohibited, please use wpcom_vip_get_page_by_path() instead. [phpcodesniffer]

== includes/class-sensei-course.php (190 issues) ==
1-3324: File `class-sensei-course.php` has 1728 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
15-3316: `Sensei_Course` has 71 functions (exceeds 20 allowed). Consider refactoring. [structure]
43-130: Method `__construct` has 45 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
220-273: Method `course_prerequisite_meta_box_content` has 46 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
227: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
233: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
291: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
320-356: Method `course_video_meta_box_content` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
367-400: Function `meta_box_save` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
371: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
371: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
371: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
371: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
371: Missing wp_unslash() before sanitization. [phpcodesniffer]
383: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
383: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
383: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
422: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
424: Processing form data without nonce verification. [phpcodesniffer]
424: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
424: Missing wp_unslash() before sanitization. [phpcodesniffer]
424: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
424: Processing form data without nonce verification. [phpcodesniffer]
424: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
428: Processing form data without nonce verification. [phpcodesniffer]
428: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
428: Processing form data without nonce verification. [phpcodesniffer]
428: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
428: Missing wp_unslash() before sanitization. [phpcodesniffer]
442-513: Method `course_lessons_meta_box_content` has 53 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
442-513: Function `course_lessons_meta_box_content` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
456: Found precision alignment of 1 spaces. [phpcodesniffer]
457: Found precision alignment of 1 spaces. [phpcodesniffer]
577-613: Method `add_column_data` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
577-613: Function `add_column_data` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
603: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
644: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
665-791: Method `get_archive_query_args` has 97 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
665-791: Function `get_archive_query_args` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
669: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
669: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
672: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
722: Detected usage of meta_query, possible slow query. [phpcodesniffer]
747: Detected usage of meta_query, possible slow query. [phpcodesniffer]
760: Detected usage of meta_value, possible slow query. [phpcodesniffer]
761: Detected usage of meta_key, possible slow query. [phpcodesniffer]
784: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
809-924: Function `course_image` has a Cognitive Complexity of 33 (exceeds 5 allowed). Consider refactoring. [structure]
809-924: Method `course_image` has 56 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
826: Use Yoda Condition checks, you must. [phpcodesniffer]
826: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
826: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
826: Use Yoda Condition checks, you must. [phpcodesniffer]
908: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
939: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
961-1024: Method `course_lessons` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
961-1024: Function `course_lessons` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
969: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
972: Detected usage of meta_query, possible slow query. [phpcodesniffer]
1013: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1038: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1053-1074: Function `course_quizzes` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
1104: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1106: Detected usage of meta_key, possible slow query. [phpcodesniffer]
1107: Detected usage of meta_value, possible slow query. [phpcodesniffer]
1112: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1129: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1130: Detected usage of meta_key, possible slow query. [phpcodesniffer]
1131: Detected usage of meta_value, possible slow query. [phpcodesniffer]
1136: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1155: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1158: Detected usage of meta_query, possible slow query. [phpcodesniffer]
1170: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1232: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1232: Processing form data without nonce verification. [phpcodesniffer]
1232: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1232: Processing form data without nonce verification. [phpcodesniffer]
1233: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1248-1726: Method `load_user_courses_content` has 310 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1248-1726: Function `load_user_courses_content` has a Cognitive Complexity of 124 (exceeds 5 allowed). Consider refactoring. [structure]
1259: Use Yoda Condition checks, you must. [phpcodesniffer]
1259: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1264: Assignments must be the first block of code on a line [phpcodesniffer]
1293: Assignments must be the first block of code on a line [phpcodesniffer]
1302: Assignments must be the first block of code on a line [phpcodesniffer]
1364: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1371: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1404: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1404: Use Yoda Condition checks, you must. [phpcodesniffer]
1436: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1455: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1455: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1455: Processing form data without nonce verification. [phpcodesniffer]
1455: Processing form data without nonce verification. [phpcodesniffer]
1456: Processing form data without nonce verification. [phpcodesniffer]
1456: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1456: Missing wp_unslash() before sanitization. [phpcodesniffer]
1456: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1470: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1520: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1565: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1565: Processing form data without nonce verification. [phpcodesniffer]
1565: Processing form data without nonce verification. [phpcodesniffer]
1565: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1566: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1566: Processing form data without nonce verification. [phpcodesniffer]
1566: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1566: Missing wp_unslash() before sanitization. [phpcodesniffer]
1580: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1614: Found precision alignment of 3 spaces. [phpcodesniffer]
1637: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1678: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
1689: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1711: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
1740: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1860: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1946-1979: Function `block_notification_emails` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
1967: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2008: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2009: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2009: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2009: Missing wp_unslash() before sanitization. [phpcodesniffer]
2013: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2013: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2013: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2094-2147: Method `the_course_meta` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2113: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
2161: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2186-2287: Method `the_course_action_buttons` has 60 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2186-2287: Function `the_course_action_buttons` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
2204: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2204: Use Yoda Condition checks, you must. [phpcodesniffer]
2303-2345: Function `course_query_filter` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
2306: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2327: Expected 1 space after closing brace; newline found [phpcodesniffer]
2329: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2355-2396: Function `get_course_loop_content_class` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
2374: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2374: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2378: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2450: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
2450: Processing form data without nonce verification. [phpcodesniffer]
2452: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
2452: Missing wp_unslash() before sanitization. [phpcodesniffer]
2481-2531: Method `course_archive_filters` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2516: Processing form data without nonce verification. [phpcodesniffer]
2516: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2516: Missing wp_unslash() before sanitization. [phpcodesniffer]
2516: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2520: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2545: Processing form data without nonce verification. [phpcodesniffer]
2545: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2545: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2545: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2545: Processing form data without nonce verification. [phpcodesniffer]
2566: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
2566: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2566: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
2566: Processing form data without nonce verification. [phpcodesniffer]
2566: Processing form data without nonce verification. [phpcodesniffer]
2604-2661: Function `archive_header` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
2604-2661: Method `archive_header` has 38 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2719: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2767-2836: Function `load_single_course_lessons_query` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
2767-2836: Method `load_single_course_lessons_query` has 51 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2773: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2782: Detected high pagination limit, `posts_per_page` is set to `500` [phpcodesniffer]
2785: Detected usage of meta_query, possible slow query. [phpcodesniffer]
2805: Detected usage of tax_query, possible slow query. [phpcodesniffer]
2817: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
2820: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
2822: Detected usage of meta_key, possible slow query. [phpcodesniffer]
2823: Detected usage of meta_value, possible slow query. [phpcodesniffer]
2853: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2882-2941: Method `the_course_enrolment_actions` has 41 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2882-2941: Function `the_course_enrolment_actions` has a Cognitive Complexity of 14 (exceeds 5 allowed). Consider refactoring. [structure]
2885: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2952-3014: Method `output_course_enrolment_actions` has 38 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2952-3014: Function `output_course_enrolment_actions` has a Cognitive Complexity of 20 (exceeds 5 allowed). Consider refactoring. [structure]
2959: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3032: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3042: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3160: Detected high pagination limit, `posts_per_page` is set to `1000` [phpcodesniffer]
3230: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3230: Use Yoda Condition checks, you must. [phpcodesniffer]
3239: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3239: Use Yoda Condition checks, you must. [phpcodesniffer]
3263: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3277: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3296: Found precision alignment of 1 spaces. [phpcodesniffer]

== includes/class-sensei-data-cleaner.php (20 issues) ==
250: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
254: Disabling pagination is prohibited in VIP context, do not set `numberposts` to `-1` ever. [phpcodesniffer]
343: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
343: Usage of a direct database call is discouraged. [phpcodesniffer]
352: Usage of a direct database call is discouraged. [phpcodesniffer]
352: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
353: Usage of a direct database call is discouraged. [phpcodesniffer]
353: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
354: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
354: Usage of a direct database call is discouraged. [phpcodesniffer]
355: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
355: Usage of a direct database call is discouraged. [phpcodesniffer]
370: Usage of a direct database call is discouraged. [phpcodesniffer]
370: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
389: Usage of a direct database call is discouraged. [phpcodesniffer]
389: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
391: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
407: Usage of a direct database call is discouraged. [phpcodesniffer]
407: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
407: Detected usage of meta_key, possible slow query. [phpcodesniffer]

== includes/class-sensei-db-query-learners.php (8 issues) ==
34-82: Function `build_query` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
34-82: Method `build_query` has 40 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
57: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
93: Usage of a direct database call is discouraged. [phpcodesniffer]
93: Use placeholders and $wpdb->prepare(); found $sql [phpcodesniffer]
93: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
94: Usage of a direct database call is discouraged. [phpcodesniffer]
94: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]

== includes/class-sensei-emails.php (19 issues) ==
92: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
111: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
161: Method `send` has 6 arguments (exceeds 4 allowed). Consider refactoring. [structure]
233: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
252-272: Function `learner_completed_course` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
254: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
261: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
280-300: Function `teacher_completed_course` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
282: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
289: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
313: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
340: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
362-381: Function `teacher_quiz_submitted` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
362: Method `teacher_quiz_submitted` has 5 arguments (exceeds 4 allowed). Consider refactoring. [structure]
367: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
369: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
389-408: Function `teacher_new_message` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
394: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
421: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]

== includes/class-sensei-frontend.php (198 issues) ==
1-1825: File `class-sensei-frontend.php` has 931 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
25-1817: `Sensei_Frontend` has 64 functions (exceeds 20 allowed). Consider refactoring. [structure]
50-108: Method `__construct` has 41 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
119: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
119: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
121: trigger_error() found. Debug code should not normally be used in production. [phpcodesniffer]
295-350: Function `load_content_pagination` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
295-350: Method `load_content_pagination` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
371-454: Method `sensei_setup_nav_menu_item` has 50 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
371-454: Function `sensei_setup_nav_menu_item` has a Cognitive Complexity of 17 (exceeds 5 allowed). Consider refactoring. [structure]
374: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
374: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
442: Missing wp_unslash() before sanitization. [phpcodesniffer]
442: Detected usage of a non-sanitized input variable: $_SERVER [phpcodesniffer]
442: Detected usage of a non-validated input variable: $_SERVER [phpcodesniffer]
442: Detected access of super global var $_SERVER, probably needs manual inspection. [phpcodesniffer]
443: Detected usage of a non-validated input variable: $_SERVER [phpcodesniffer]
443: Detected usage of a non-sanitized input variable: $_SERVER [phpcodesniffer]
443: Missing wp_unslash() before sanitization. [phpcodesniffer]
443: Detected access of super global var $_SERVER, probably needs manual inspection. [phpcodesniffer]
447: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
464-489: Function `sensei_wp_nav_menu_objects` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
470: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
479: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
500: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
500: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
500: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
556: Method `sensei_lesson_image` has 5 arguments (exceeds 4 allowed). Consider refactoring. [structure]
574-590: Function `sensei_course_archive_pagination` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
576: Missing wp_unslash() before sanitization. [phpcodesniffer]
576: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
576: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
576: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
576: Processing form data without nonce verification. [phpcodesniffer]
576: Processing form data without nonce verification. [phpcodesniffer]
602: trigger_error() found. Debug code should not normally be used in production. [phpcodesniffer]
605: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
618: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
628: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
670-709: Method `sensei_breadcrumb` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
670-709: Function `sensei_breadcrumb` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
701: Found precision alignment of 1 spaces. [phpcodesniffer]
728-753: Function `lesson_tags_display` has a Cognitive Complexity of 19 (exceeds 5 allowed). Consider refactoring. [structure]
799-838: Function `sensei_complete_lesson` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
802: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
806: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
806: Missing wp_unslash() before sanitization. [phpcodesniffer]
806: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
806: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
817: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
817: Missing wp_unslash() before sanitization. [phpcodesniffer]
817: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
821: Assignments must be the first block of code on a line [phpcodesniffer]
870-940: Function `sensei_complete_course` has a Cognitive Complexity of 11 (exceeds 5 allowed). Consider refactoring. [structure]
870-940: Method `sensei_complete_course` has 43 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
872: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
872: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
872: Missing wp_unslash() before sanitization. [phpcodesniffer]
872: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
872: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
874: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
874: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
874: Missing wp_unslash() before sanitization. [phpcodesniffer]
875: Missing wp_unslash() before sanitization. [phpcodesniffer]
875: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
875: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
875: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
893: Assignments must be the first block of code on a line [phpcodesniffer]
1000-1017: Function `sensei_lesson_video` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
1003: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1011: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1038: Found precision alignment of 3 spaces. [phpcodesniffer]
1039: Found precision alignment of 3 spaces. [phpcodesniffer]
1040: Found precision alignment of 3 spaces. [phpcodesniffer]
1046: Found precision alignment of 3 spaces. [phpcodesniffer]
1047: Found precision alignment of 3 spaces. [phpcodesniffer]
1048: Found precision alignment of 3 spaces. [phpcodesniffer]
1100-1161: Method `sensei_course_archive_meta` has 41 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1124: Found precision alignment of 3 spaces. [phpcodesniffer]
1128: Found precision alignment of 3 spaces. [phpcodesniffer]
1215: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
1232-1319: Function `sensei_login_form` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
1232-1319: Method `sensei_login_form` has 61 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1270: Processing form data without nonce verification. [phpcodesniffer]
1270: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1271: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1271: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1271: Processing form data without nonce verification. [phpcodesniffer]
1271: Missing wp_unslash() before sanitization. [phpcodesniffer]
1280: Processing form data without nonce verification. [phpcodesniffer]
1280: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1281: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1281: Processing form data without nonce verification. [phpcodesniffer]
1281: Missing wp_unslash() before sanitization. [phpcodesniffer]
1281: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1290: Processing form data without nonce verification. [phpcodesniffer]
1290: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1291: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1291: Missing wp_unslash() before sanitization. [phpcodesniffer]
1291: Processing form data without nonce verification. [phpcodesniffer]
1291: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1321-1349: Method `sensei_lesson_meta` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1321-1349: Function `sensei_lesson_meta` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
1349: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
1371-1391: Function `sensei_lesson_preview_title` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
1376: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1376: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1385: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1393-1430: Function `sensei_course_start` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
1399: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1400: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
1400: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1400: Missing wp_unslash() before sanitization. [phpcodesniffer]
1400: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1482: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1571: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1571: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1571: Processing form data without nonce verification. [phpcodesniffer]
1571: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1571: Processing form data without nonce verification. [phpcodesniffer]
1578: Missing wp_unslash() before sanitization. [phpcodesniffer]
1578: Detected access of super global var $_SERVER, probably needs manual inspection. [phpcodesniffer]
1578: Detected usage of a non-sanitized input variable: $_SERVER [phpcodesniffer]
1578: Detected usage of a non-validated input variable: $_SERVER [phpcodesniffer]
1580: Found precision alignment of 1 spaces. [phpcodesniffer]
1583: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1593-1688: Method `sensei_handle_login_request` has 43 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1593-1688: Function `sensei_handle_login_request` has a Cognitive Complexity of 24 (exceeds 5 allowed). Consider refactoring. [structure]
1596: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1596: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1596: Processing form data without nonce verification. [phpcodesniffer]
1596: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1599: Missing wp_unslash() before sanitization. [phpcodesniffer]
1599: Detected usage of a non-sanitized input variable: $_REQUEST [phpcodesniffer]
1599: Detected usage of a non-validated input variable: $_REQUEST [phpcodesniffer]
1599: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1604: Detected usage of a non-sanitized input variable: $_REQUEST [phpcodesniffer]
1604: Missing wp_unslash() before sanitization. [phpcodesniffer]
1604: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1604: Detected usage of a non-validated input variable: $_REQUEST [phpcodesniffer]
1606: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1606: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1607: Found precision alignment of 1 spaces. [phpcodesniffer]
1607: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1607: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1613: Missing wp_unslash() before sanitization. [phpcodesniffer]
1613: Detected usage of a non-sanitized input variable: $_REQUEST [phpcodesniffer]
1613: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1614: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1614: Missing wp_unslash() before sanitization. [phpcodesniffer]
1629: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1640: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1640: Missing wp_unslash() before sanitization. [phpcodesniffer]
1645: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1645: Missing wp_unslash() before sanitization. [phpcodesniffer]
1645: Detected usage of a non-sanitized input variable: $_REQUEST [phpcodesniffer]
1646: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
1653: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1667: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1673: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1676: This comment is 46% valid code; is this commented out code? [phpcodesniffer]
1677: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1695-1790: Function `sensei_process_registration` has a Cognitive Complexity of 19 (exceeds 5 allowed). Consider refactoring. [structure]
1695-1790: Method `sensei_process_registration` has 63 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1699: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1699: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1699: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1705: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
1705: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1705: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1705: Missing wp_unslash() before sanitization. [phpcodesniffer]
1710: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1710: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1717: Missing wp_unslash() before sanitization. [phpcodesniffer]
1717: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1718: Missing wp_unslash() before sanitization. [phpcodesniffer]
1718: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1718: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1719: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1719: Missing wp_unslash() before sanitization. [phpcodesniffer]
1719: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1723: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1723: Use Yoda Condition checks, you must. [phpcodesniffer]
1739: Use Yoda Condition checks, you must. [phpcodesniffer]
1739: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1750: Avoid too many `return` statements within this method. [structure]
1757: Avoid too many `return` statements within this method. [structure]
1787: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1804: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1804: Processing form data without nonce verification. [phpcodesniffer]
1804: Detected usage of a non-validated input variable: $_GET [phpcodesniffer]
1804: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1804: Use Yoda Condition checks, you must. [phpcodesniffer]
1808: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1808: Processing form data without nonce verification. [phpcodesniffer]
1808: Detected usage of a non-validated input variable: $_GET [phpcodesniffer]
1808: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1808: Use Yoda Condition checks, you must. [phpcodesniffer]

== includes/class-sensei-grading-main.php (45 issues) ==
1-523: File `class-sensei-grading-main.php` has 365 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
43: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
101-231: Function `prepare_items` has a Cognitive Complexity of 22 (exceeds 5 allowed). Consider refactoring. [structure]
101-231: Method `prepare_items` has 100 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
106: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
106: Processing form data without nonce verification. [phpcodesniffer]
107: Processing form data without nonce verification. [phpcodesniffer]
107: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
107: Missing wp_unslash() before sanitization. [phpcodesniffer]
107: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
108: Processing form data without nonce verification. [phpcodesniffer]
108: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
108: Missing wp_unslash() before sanitization. [phpcodesniffer]
108: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
114: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
114: Processing form data without nonce verification. [phpcodesniffer]
115: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
115: Missing wp_unslash() before sanitization. [phpcodesniffer]
115: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
115: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
115: Processing form data without nonce verification. [phpcodesniffer]
120: Processing form data without nonce verification. [phpcodesniffer]
120: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
121: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
121: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
121: Processing form data without nonce verification. [phpcodesniffer]
121: Missing wp_unslash() before sanitization. [phpcodesniffer]
239-344: Method `get_row_data` has 93 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
239-344: Function `get_row_data` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
243: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
246: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
249: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
252: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
255: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
365-503: Method `data_table_header` has 103 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
365-503: Function `data_table_header` has a Cognitive Complexity of 17 (exceeds 5 allowed). Consider refactoring. [structure]
452: Assignments must be the first block of code on a line [phpcodesniffer]
452: Assignments must be the first block of code on a line [phpcodesniffer]
452: Assignments must be the first block of code on a line [phpcodesniffer]
453: Assignments must be the first block of code on a line [phpcodesniffer]
453: Assignments must be the first block of code on a line [phpcodesniffer]
453: Assignments must be the first block of code on a line [phpcodesniffer]
479: Assignments must be the first block of code on a line [phpcodesniffer]
479: Assignments must be the first block of code on a line [phpcodesniffer]
479: Assignments must be the first block of code on a line [phpcodesniffer]

== includes/class-sensei-grading-user-quiz.php (11 issues) ==
50-296: Function `display` has a Cognitive Complexity of 54 (exceeds 5 allowed). Consider refactoring. [structure]
50-296: Method `display` has 213 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
160: Assignments must be the first block of code on a line [phpcodesniffer]
185: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
185: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
198: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
222: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
228: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
246: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
268: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
273: Found precision alignment of 2 spaces. [phpcodesniffer]

== includes/class-sensei-grading.php (214 issues) ==
1-1183: File `class-sensei-grading.php` has 655 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
16-1175: `Sensei_Grading` has 32 functions (exceeds 20 allowed). Consider refactoring. [structure]
38: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
38: Processing form data without nonce verification. [phpcodesniffer]
38: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
38: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
38: Processing form data without nonce verification. [phpcodesniffer]
140: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
155: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
155: Processing form data without nonce verification. [phpcodesniffer]
155: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
155: Processing form data without nonce verification. [phpcodesniffer]
155: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
155: Processing form data without nonce verification. [phpcodesniffer]
155: Processing form data without nonce verification. [phpcodesniffer]
155: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
168-201: Method `grading_default_view` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
171: Processing form data without nonce verification. [phpcodesniffer]
171: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
172: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
174: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
174: Processing form data without nonce verification. [phpcodesniffer]
175: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
177: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
177: Processing form data without nonce verification. [phpcodesniffer]
178: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
180: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
180: Processing form data without nonce verification. [phpcodesniffer]
181: Processing form data without nonce verification. [phpcodesniffer]
181: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
181: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
181: Missing wp_unslash() before sanitization. [phpcodesniffer]
214: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
214: Processing form data without nonce verification. [phpcodesniffer]
215: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
217: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
217: Processing form data without nonce verification. [phpcodesniffer]
218: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
258: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
262: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
275-302: Function `grading_default_nav` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
281: Processing form data without nonce verification. [phpcodesniffer]
281: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
282: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
289: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
289: Processing form data without nonce verification. [phpcodesniffer]
290: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
293: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
293: Processing form data without nonce verification. [phpcodesniffer]
293: Processing form data without nonce verification. [phpcodesniffer]
293: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
295: Missing wp_unslash() before sanitization. [phpcodesniffer]
295: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
295: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
295: Processing form data without nonce verification. [phpcodesniffer]
310-349: Function `grading_user_quiz_nav` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
310-349: Method `grading_user_quiz_nav` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
315: Processing form data without nonce verification. [phpcodesniffer]
315: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
316: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
340: Processing form data without nonce verification. [phpcodesniffer]
340: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
340: Processing form data without nonce verification. [phpcodesniffer]
340: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
342: Processing form data without nonce verification. [phpcodesniffer]
342: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
342: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
342: Missing wp_unslash() before sanitization. [phpcodesniffer]
390-464: Function `count_statuses` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
390-464: Method `count_statuses` has 49 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
404: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
429: Use placeholders and $wpdb->prepare(); found $query [phpcodesniffer]
430: Use placeholders and $wpdb->prepare(); found $sql [phpcodesniffer]
430: Usage of a direct database call is discouraged. [phpcodesniffer]
478: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
485: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
504: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
504: Processing form data without nonce verification. [phpcodesniffer]
507: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
507: Processing form data without nonce verification. [phpcodesniffer]
519: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
543: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
543: Processing form data without nonce verification. [phpcodesniffer]
543: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
543: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
543: Missing wp_unslash() before sanitization. [phpcodesniffer]
562-589: Function `lessons_drop_down_html` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
569: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
572: Detected usage of meta_key, possible slow query. [phpcodesniffer]
573: Detected usage of meta_value, possible slow query. [phpcodesniffer]
578: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
600-724: Method `admin_process_grading_submission` has 65 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
600-724: Function `admin_process_grading_submission` has a Cognitive Complexity of 24 (exceeds 5 allowed). Consider refactoring. [structure]
603: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
604: Missing wp_unslash() before sanitization. [phpcodesniffer]
604: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
604: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
604: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
605: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
606: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
606: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
606: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
612: Missing wp_unslash() before sanitization. [phpcodesniffer]
612: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
612: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
613: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
613: Detected usage of a non-validated input variable: $_GET [phpcodesniffer]
613: Missing wp_unslash() before sanitization. [phpcodesniffer]
613: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
619: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
619: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
619: Missing wp_unslash() before sanitization. [phpcodesniffer]
619: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
628: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
631: Use Yoda Condition checks, you must. [phpcodesniffer]
631: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
631: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
633: Missing wp_unslash() before sanitization. [phpcodesniffer]
633: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
633: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
633: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
643: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
647: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
649: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
649: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
664: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
664: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
664: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
664: Use Yoda Condition checks, you must. [phpcodesniffer]
681: Expected 1 space after closing brace; newline found [phpcodesniffer]
690: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
707: Missing wp_unslash() before sanitization. [phpcodesniffer]
707: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
707: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
707: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
711: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
713: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
713: Missing wp_unslash() before sanitization. [phpcodesniffer]
713: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
726-766: Function `get_redirect_url` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
726-766: Method `get_redirect_url` has 33 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
727: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
727: Processing form data without nonce verification. [phpcodesniffer]
727: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
727: Processing form data without nonce verification. [phpcodesniffer]
730: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
730: Processing form data without nonce verification. [phpcodesniffer]
742: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
743: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
744: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
744: Missing wp_unslash() before sanitization. [phpcodesniffer]
744: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
744: Missing wp_unslash() before sanitization. [phpcodesniffer]
744: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
744: Processing form data without nonce verification. [phpcodesniffer]
744: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
744: Processing form data without nonce verification. [phpcodesniffer]
744: Processing form data without nonce verification. [phpcodesniffer]
744: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
774: Missing wp_unslash() before sanitization. [phpcodesniffer]
774: Processing form data without nonce verification. [phpcodesniffer]
774: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
774: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
774: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
805: Processing form data without nonce verification. [phpcodesniffer]
805: Processing form data without nonce verification. [phpcodesniffer]
805: Missing wp_unslash() before sanitization. [phpcodesniffer]
805: Processing form data without nonce verification. [phpcodesniffer]
805: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
805: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
805: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
805: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
805: Processing form data without nonce verification. [phpcodesniffer]
805: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
805: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
806: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
806: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
806: Processing form data without nonce verification. [phpcodesniffer]
821: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
821: Processing form data without nonce verification. [phpcodesniffer]
821: Processing form data without nonce verification. [phpcodesniffer]
821: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
821: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
846-912: Function `grade_quiz_auto` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
846-912: Method `grade_quiz_auto` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
849: Use Yoda Condition checks, you must. [phpcodesniffer]
849: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
878: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
880: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
928-1008: Method `grade_question_auto` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
928-1008: Function `grade_question_auto` has a Cognitive Complexity of 21 (exceeds 5 allowed). Consider refactoring. [structure]
930: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
965: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
969: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
973: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
977: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
986: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1024: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1052: Silencing errors is discouraged [phpcodesniffer]
1076: Usage of a direct database call is discouraged. [phpcodesniffer]
1076: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1076: Use placeholders and $wpdb->prepare(); found $comment_query [phpcodesniffer]
1097: Use placeholders and $wpdb->prepare(); found $comment_query [phpcodesniffer]
1097: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1097: Usage of a direct database call is discouraged. [phpcodesniffer]
1120: Usage of a direct database call is discouraged. [phpcodesniffer]
1120: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1120: Use placeholders and $wpdb->prepare(); found $comment_query [phpcodesniffer]
1144: Usage of a direct database call is discouraged. [phpcodesniffer]
1144: Use placeholders and $wpdb->prepare(); found $comment_query [phpcodesniffer]
1144: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1169: Usage of a direct database call is discouraged. [phpcodesniffer]
1169: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1169: Use placeholders and $wpdb->prepare(); found $comment_query [phpcodesniffer]

== includes/class-sensei-learner-profiles.php (3 issues) ==
89-115: Function `get_permalink` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
91: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
91: Use Yoda Condition checks, you must. [phpcodesniffer]

== includes/class-sensei-learner.php (3 issues) ==
80-147: Function `get_all` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
80-147: Method `get_all` has 53 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
172: Avoid too many `return` statements within this method. [structure]

== includes/class-sensei-learners-admin-bulk-actions-controller.php (36 issues) ==
113-186: Function `handle_http_post` has a Cognitive Complexity of 49 (exceeds 5 allowed). Consider refactoring. [structure]
113-186: Method `handle_http_post` has 56 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
118: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
124: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
124: Missing wp_unslash() before sanitization. [phpcodesniffer]
124: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
126: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
130: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
130: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
130: Missing wp_unslash() before sanitization. [phpcodesniffer]
130: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
131: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
131: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
131: Missing wp_unslash() before sanitization. [phpcodesniffer]
131: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
241: Found precision alignment of 1 spaces. [phpcodesniffer]
247: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
247: Processing form data without nonce verification. [phpcodesniffer]
247: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
247: Processing form data without nonce verification. [phpcodesniffer]
247: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
248: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
248: Processing form data without nonce verification. [phpcodesniffer]
248: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
248: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
248: Processing form data without nonce verification. [phpcodesniffer]
255: This comment is 62% valid code; is this commented out code? [phpcodesniffer]
275: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
275: Processing form data without nonce verification. [phpcodesniffer]
278: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
278: Processing form data without nonce verification. [phpcodesniffer]
278: Missing wp_unslash() before sanitization. [phpcodesniffer]
278: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
279: Variable "msgClass" is not in valid snake_case format [phpcodesniffer]
288: Variable "msgClass" is not in valid snake_case format [phpcodesniffer]
292: Variable "msgClass" is not in valid snake_case format [phpcodesniffer]

== includes/class-sensei-learners-admin-bulk-actions-view.php (64 issues) ==
1-377: File `class-sensei-learners-admin-bulk-actions-view.php` has 305 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
81-143: Method `get_row_data` has 46 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
169: Method `courses_select` has 6 arguments (exceeds 4 allowed). Consider refactoring. [structure]
215-260: Function `data_table_header` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
215-260: Method `data_table_header` has 43 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
218: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
218: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
218: Missing wp_unslash() before sanitization. [phpcodesniffer]
218: Processing form data without nonce verification. [phpcodesniffer]
218: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
218: Processing form data without nonce verification. [phpcodesniffer]
218: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
219: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
247: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
247: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
266-298: Method `get_learner_courses_html` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
266-298: Function `get_learner_courses_html` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
278: Use Yoda Condition checks, you must. [phpcodesniffer]
284: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
284: Use Yoda Condition checks, you must. [phpcodesniffer]
306-376: Method `parse_query_args` has 58 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
306-376: Function `parse_query_args` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
311: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
311: Processing form data without nonce verification. [phpcodesniffer]
312: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
314: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
314: Processing form data without nonce verification. [phpcodesniffer]
315: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
321: Processing form data without nonce verification. [phpcodesniffer]
321: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
322: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
322: Processing form data without nonce verification. [phpcodesniffer]
322: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
322: Missing wp_unslash() before sanitization. [phpcodesniffer]
323: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
323: Processing form data without nonce verification. [phpcodesniffer]
323: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
323: Missing wp_unslash() before sanitization. [phpcodesniffer]
329: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
329: Processing form data without nonce verification. [phpcodesniffer]
330: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
330: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
330: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
330: Missing wp_unslash() before sanitization. [phpcodesniffer]
330: Processing form data without nonce verification. [phpcodesniffer]
335: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
335: Processing form data without nonce verification. [phpcodesniffer]
336: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
336: Processing form data without nonce verification. [phpcodesniffer]
336: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
336: Missing wp_unslash() before sanitization. [phpcodesniffer]
343: get_user_meta() usage is highly discouraged, check VIP documentation on "Working with wp_users" [phpcodesniffer]
363: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
363: Processing form data without nonce verification. [phpcodesniffer]
364: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
368: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
368: Processing form data without nonce verification. [phpcodesniffer]
369: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
369: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
369: Missing wp_unslash() before sanitization. [phpcodesniffer]
369: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
369: Processing form data without nonce verification. [phpcodesniffer]
369: Missing wp_unslash() before sanitization. [phpcodesniffer]
369: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]

== includes/class-sensei-learners-main.php (69 issues) ==
1-851: File `class-sensei-learners-main.php` has 599 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
32: Missing wp_unslash() before sanitization. [phpcodesniffer]
32: Processing form data without nonce verification. [phpcodesniffer]
32: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
32: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
32: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
32: Processing form data without nonce verification. [phpcodesniffer]
33: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
33: Processing form data without nonce verification. [phpcodesniffer]
33: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
33: Missing wp_unslash() before sanitization. [phpcodesniffer]
66-101: Method `get_columns` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
96: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
133: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
146-220: Method `prepare_items` has 55 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
146-220: Function `prepare_items` has a Cognitive Complexity of 14 (exceeds 5 allowed). Consider refactoring. [structure]
151: Processing form data without nonce verification. [phpcodesniffer]
151: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
152: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
152: Processing form data without nonce verification. [phpcodesniffer]
152: Missing wp_unslash() before sanitization. [phpcodesniffer]
152: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
153: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
153: Processing form data without nonce verification. [phpcodesniffer]
153: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
153: Missing wp_unslash() before sanitization. [phpcodesniffer]
159: Processing form data without nonce verification. [phpcodesniffer]
159: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
160: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
160: Missing wp_unslash() before sanitization. [phpcodesniffer]
160: Processing form data without nonce verification. [phpcodesniffer]
160: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
160: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
165: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
165: Processing form data without nonce verification. [phpcodesniffer]
166: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
171: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
171: Processing form data without nonce verification. [phpcodesniffer]
172: Processing form data without nonce verification. [phpcodesniffer]
172: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
172: Missing wp_unslash() before sanitization. [phpcodesniffer]
172: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
232-453: Function `get_row_data` has a Cognitive Complexity of 12 (exceeds 5 allowed). Consider refactoring. [structure]
232-453: Method `get_row_data` has 175 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
266: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
266: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
266: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
450: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
539-607: Method `get_learners` has 55 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
539-607: Function `get_learners` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
641-728: Method `data_table_header` has 61 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
641-728: Function `data_table_header` has a Cognitive Complexity of 14 (exceeds 5 allowed). Consider refactoring. [structure]
647: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
650: Processing form data without nonce verification. [phpcodesniffer]
650: Missing wp_unslash() before sanitization. [phpcodesniffer]
650: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
650: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
650: Processing form data without nonce verification. [phpcodesniffer]
650: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
650: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
651: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
676: Assignments must be the first block of code on a line [phpcodesniffer]
692: Assignments must be the first block of code on a line [phpcodesniffer]
699: Expected 1 space after closing brace; newline found [phpcodesniffer]
746-816: Method `add_learners_box` has 65 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
746-816: Function `add_learners_box` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
782: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
784: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
796: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== includes/class-sensei-lesson.php (451 issues) ==
1-4521: File `class-sensei-lesson.php` has 2835 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
16-4513: `Sensei_Lesson` has 80 functions (exceeds 20 allowed). Consider refactoring. [structure]
26-113: Method `__construct` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
158-224: Method `lesson_info_meta_box_content` has 55 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
232-284: Method `lesson_prerequisite_meta_box_content` has 47 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
239: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
245: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
292-326: Method `lesson_preview_meta_box_content` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
300: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
335-372: Function `meta_box_save` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
338: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
338: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
338: Missing wp_unslash() before sanitization. [phpcodesniffer]
338: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
338: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
349: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
349: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
349: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
385-414: Function `add_lesson_to_course_order` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
392: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
409: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
424: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
430: Use Yoda Condition checks, you must. [phpcodesniffer]
444-556: Method `quiz_update` has 72 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
444-556: Function `quiz_update` has a Cognitive Complexity of 38 (exceeds 5 allowed). Consider refactoring. [structure]
447: Missing wp_unslash() before sanitization. [phpcodesniffer]
447: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
447: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
447: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
447: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
464: Found precision alignment of 1 spaces. [phpcodesniffer]
465: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
470: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
470: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
471: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
498: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
516: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
521: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
558-584: Function `get_submitted_setting_value` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
567: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
569: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
569: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
569: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
569: Processing form data without nonce verification. [phpcodesniffer]
569: Processing form data without nonce verification. [phpcodesniffer]
577: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
577: Processing form data without nonce verification. [phpcodesniffer]
578: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
578: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
578: Processing form data without nonce verification. [phpcodesniffer]
578: Missing wp_unslash() before sanitization. [phpcodesniffer]
595-640: Function `save_post_meta` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
606: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
606: Processing form data without nonce verification. [phpcodesniffer]
609: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
621: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
623: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
623: Processing form data without nonce verification. [phpcodesniffer]
623: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
623: Processing form data without nonce verification. [phpcodesniffer]
623: Missing wp_unslash() before sanitization. [phpcodesniffer]
623: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
627: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
627: Processing form data without nonce verification. [phpcodesniffer]
627: Missing wp_unslash() before sanitization. [phpcodesniffer]
627: Processing form data without nonce verification. [phpcodesniffer]
627: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
632: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
632: Processing form data without nonce verification. [phpcodesniffer]
632: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
632: Processing form data without nonce verification. [phpcodesniffer]
632: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
632: Use Yoda Condition checks, you must. [phpcodesniffer]
632: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
636: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
648-799: Function `lesson_course_meta_box_content` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
648-799: Method `lesson_course_meta_box_content` has 115 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
656: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
656: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
656: Processing form data without nonce verification. [phpcodesniffer]
656: Processing form data without nonce verification. [phpcodesniffer]
657: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
662: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
668: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
801-962: Method `quiz_panel` has 122 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
801-962: Function `quiz_panel` has a Cognitive Complexity of 11 (exceeds 5 allowed). Consider refactoring. [structure]
805: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
814: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
829: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
829: Use Yoda Condition checks, you must. [phpcodesniffer]
844: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
940: Array double arrow not aligned correctly; expected 4 space(s) between "'label'" and double arrow, but found 2. [phpcodesniffer]
944: Array double arrow not aligned correctly; expected 3 space(s) between "'option'" and double arrow, but found 1. [phpcodesniffer]
964-1012: Function `quiz_panel_questions` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
964-1012: Method `quiz_panel_questions` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
984: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1014: Method `quiz_panel_question` has 5 arguments (exceeds 4 allowed). Consider refactoring. [structure]
1014-1220: Method `quiz_panel_question` has 165 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1014-1220: Function `quiz_panel_question` has a Cognitive Complexity of 76 (exceeds 5 allowed). Consider refactoring. [structure]
1020: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1031: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1031: Use Yoda Condition checks, you must. [phpcodesniffer]
1036: Assignments must be the first block of code on a line [phpcodesniffer]
1036: Assignments must be the first block of code on a line [phpcodesniffer]
1036: Assignments must be the first block of code on a line [phpcodesniffer]
1037: Assignments must be the first block of code on a line [phpcodesniffer]
1037: Assignments must be the first block of code on a line [phpcodesniffer]
1043-1066: Avoid deeply nested control flow statements. [structure]
1046: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1081: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1083: Use Yoda Condition checks, you must. [phpcodesniffer]
1083: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1095: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1113: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1113: Use Yoda Condition checks, you must. [phpcodesniffer]
1116: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1145: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1145: Use Yoda Condition checks, you must. [phpcodesniffer]
1168: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1206: Array double arrow not aligned correctly; expected 4 space(s) between "'label'" and double arrow, but found 2. [phpcodesniffer]
1222-1426: Method `quiz_panel_add` has 144 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1222-1426: Function `quiz_panel_add` has a Cognitive Complexity of 28 (exceeds 5 allowed). Consider refactoring. [structure]
1230: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1242: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1269: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1307: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1315: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1428: Method `quiz_panel_get_existing_questions` has 5 arguments (exceeds 4 allowed). Consider refactoring. [structure]
1428-1512: Method `quiz_panel_get_existing_questions` has 63 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1428-1512: Function `quiz_panel_get_existing_questions` has a Cognitive Complexity of 14 (exceeds 5 allowed). Consider refactoring. [structure]
1514-1553: Method `quiz_panel_add_existing_question` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1531: strip_tags() is discouraged. Use the more comprehensive wp_strip_all_tags() instead. [phpcodesniffer]
1555-1625: Function `quiz_panel_filter_existing_questions` has a Cognitive Complexity of 17 (exceeds 5 allowed). Consider refactoring. [structure]
1555-1625: Method `quiz_panel_filter_existing_questions` has 50 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1561: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1563: Processing form data without nonce verification. [phpcodesniffer]
1563: Missing wp_unslash() before sanitization. [phpcodesniffer]
1563: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1563: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1571: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1571: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
1571: Missing wp_unslash() before sanitization. [phpcodesniffer]
1571: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1627-1861: Function `quiz_panel_question_field` has a Cognitive Complexity of 76 (exceeds 5 allowed). Consider refactoring. [structure]
1627-1861: Method `quiz_panel_question_field` has 196 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1665: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1686: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1846: Array double arrow not aligned correctly; expected 4 space(s) between "'label'" and double arrow, but found 1. [phpcodesniffer]
1863-1911: Method `quiz_panel_question_feedback` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1867: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1871: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1897: Array double arrow not aligned correctly; expected 4 space(s) between "'label'" and double arrow, but found 1. [phpcodesniffer]
1914: Processing form data without nonce verification. [phpcodesniffer]
1914: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1916: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1916: Processing form data without nonce verification. [phpcodesniffer]
1926: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1926: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1926: Missing wp_unslash() before sanitization. [phpcodesniffer]
1926: Processing form data without nonce verification. [phpcodesniffer]
1937: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
1937: Missing wp_unslash() before sanitization. [phpcodesniffer]
1937: Processing form data without nonce verification. [phpcodesniffer]
1937: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1937: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1983-2044: Method `lesson_quiz_settings_meta_box_content` has 54 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2062-2144: Method `get_quiz_settings` has 74 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2062-2144: Function `get_quiz_settings` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
2079: Use Yoda Condition checks, you must. [phpcodesniffer]
2079: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2152-2207: Method `enqueue_scripts` has 39 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2152-2207: Function `enqueue_scripts` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
2160: Missing wp_unslash() before sanitization. [phpcodesniffer]
2160: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2160: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2160: Processing form data without nonce verification. [phpcodesniffer]
2160: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2160: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2160-2205: Consider simplifying this complex logical expression. [structure]
2160: Processing form data without nonce verification. [phpcodesniffer]
2160: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2171: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2171: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2171: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2171: Processing form data without nonce verification. [phpcodesniffer]
2171: Detected usage of a non-validated input variable: $_GET [phpcodesniffer]
2224: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2224: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2224: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2224: Processing form data without nonce verification. [phpcodesniffer]
2224: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2224: Processing form data without nonce verification. [phpcodesniffer]
2224: Missing wp_unslash() before sanitization. [phpcodesniffer]
2224-2226: Consider simplifying this complex logical expression. [structure]
2224: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2259-2283: Function `add_column_data` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
2294: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2296: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2296: Processing form data without nonce verification. [phpcodesniffer]
2296: Missing wp_unslash() before sanitization. [phpcodesniffer]
2296: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2303: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2303: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
2303: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2303: Missing wp_unslash() before sanitization. [phpcodesniffer]
2321-2373: Method `lesson_update_question` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2321-2373: Function `lesson_update_question` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
2324: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2326: Processing form data without nonce verification. [phpcodesniffer]
2326: Missing wp_unslash() before sanitization. [phpcodesniffer]
2326: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2326: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2339: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
2339: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2339: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2348: Use Yoda Condition checks, you must. [phpcodesniffer]
2348: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2375-2433: Method `lesson_add_multiple_questions` has 40 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2375-2433: Function `lesson_add_multiple_questions` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
2381: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2383: Missing wp_unslash() before sanitization. [phpcodesniffer]
2383: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2383: Processing form data without nonce verification. [phpcodesniffer]
2383: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2392: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2392: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2392: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
2392: Missing wp_unslash() before sanitization. [phpcodesniffer]
2435-2466: Function `lesson_remove_multiple_questions` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
2439: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2441: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2441: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2441: Missing wp_unslash() before sanitization. [phpcodesniffer]
2441: Processing form data without nonce verification. [phpcodesniffer]
2445: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2451: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2451: Missing wp_unslash() before sanitization. [phpcodesniffer]
2451: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2459: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2468-2495: Function `get_question_category_limit` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
2472: Processing form data without nonce verification. [phpcodesniffer]
2472: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2472: Processing form data without nonce verification. [phpcodesniffer]
2472: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2472: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2473: Processing form data without nonce verification. [phpcodesniffer]
2473: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2473: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
2473: Missing wp_unslash() before sanitization. [phpcodesniffer]
2480: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2480: Processing form data without nonce verification. [phpcodesniffer]
2507: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2507: Processing form data without nonce verification. [phpcodesniffer]
2507: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2507: Missing wp_unslash() before sanitization. [phpcodesniffer]
2507: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
2511: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2523-2574: Function `lesson_add_existing_questions` has a Cognitive Complexity of 14 (exceeds 5 allowed). Consider refactoring. [structure]
2523-2574: Method `lesson_add_existing_questions` has 33 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2527: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2529: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2529: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2529: Processing form data without nonce verification. [phpcodesniffer]
2529: Missing wp_unslash() before sanitization. [phpcodesniffer]
2538: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2538: Missing wp_unslash() before sanitization. [phpcodesniffer]
2538: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
2538: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2546: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2557: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2578: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2581: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2581: Missing wp_unslash() before sanitization. [phpcodesniffer]
2581: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2581: Processing form data without nonce verification. [phpcodesniffer]
2593: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2593: Missing wp_unslash() before sanitization. [phpcodesniffer]
2593: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2593: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
2600-2626: Function `lesson_update_question_order` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
2602: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2604: Missing wp_unslash() before sanitization. [phpcodesniffer]
2604: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2604: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2604: Processing form data without nonce verification. [phpcodesniffer]
2613: Missing wp_unslash() before sanitization. [phpcodesniffer]
2613: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
2613: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2613: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2630: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2632: Missing wp_unslash() before sanitization. [phpcodesniffer]
2632: Processing form data without nonce verification. [phpcodesniffer]
2632: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2632: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2641: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2641: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
2641: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
2641: Missing wp_unslash() before sanitization. [phpcodesniffer]
2655-2720: Method `lesson_save_course` has 46 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2655-2720: Function `lesson_save_course` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
2667: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2679: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2691: Use Yoda Condition checks, you must. [phpcodesniffer]
2691: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2730-2979: Method `lesson_save_question` has 166 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2730-2979: Function `lesson_save_question` has a Cognitive Complexity of 64 (exceeds 5 allowed). Consider refactoring. [structure]
2737: Assignments must be the first block of code on a line [phpcodesniffer]
2750: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2754: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2761: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2766: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2766: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2769: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2769: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2772: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2772: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2776: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2776: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2780: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2780: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2784: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2784: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2788: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2788: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2792: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2792: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2796: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2796: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2799: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2799: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2804: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2828: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2847: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2865: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2873: Use Yoda Condition checks, you must. [phpcodesniffer]
2873: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2900: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2902: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2926: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
2935: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2989-3012: Function `lesson_remove_question` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
3005: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3046: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
3095: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
3118-3322: Function `lesson_quiz_questions` has a Cognitive Complexity of 92 (exceeds 5 allowed). Consider refactoring. [structure]
3118-3322: Method `lesson_quiz_questions` has 131 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3125: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
3125: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
3125: Processing form data without nonce verification. [phpcodesniffer]
3125: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
3125: Processing form data without nonce verification. [phpcodesniffer]
3125: Missing wp_unslash() before sanitization. [phpcodesniffer]
3139: Use Yoda Condition checks, you must. [phpcodesniffer]
3139: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3147: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
3148: Detected usage of meta_key, possible slow query. [phpcodesniffer]
3151: Detected usage of meta_query, possible slow query. [phpcodesniffer]
3172-3253: Consider simplifying this complex logical expression. [structure]
3172: Processing form data without nonce verification. [phpcodesniffer]
3172: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3172: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
3172: Processing form data without nonce verification. [phpcodesniffer]
3172: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
3172: Processing form data without nonce verification. [phpcodesniffer]
3172: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
3172: Processing form data without nonce verification. [phpcodesniffer]
3172: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
3200: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3212: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3224: Detected usage of tax_query, possible slow query. [phpcodesniffer]
3235: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
3242: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
3274-3276: Avoid deeply nested control flow statements. [structure]
3274: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
3277: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3278-3280: Avoid deeply nested control flow statements. [structure]
3278: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3293: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
3296: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
3299: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
3310: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
3329-3361: Function `set_default_question_order` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
3339: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
3342: Detected usage of meta_query, possible slow query. [phpcodesniffer]
3351: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
3374-3439: Method `lesson_image` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3374-3439: Function `lesson_image` has a Cognitive Complexity of 17 (exceeds 5 allowed). Consider refactoring. [structure]
3379: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3379: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3379: Use Yoda Condition checks, you must. [phpcodesniffer]
3379: Use Yoda Condition checks, you must. [phpcodesniffer]
3462: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3486: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3496: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3523-3629: Method `all_lessons_edit_fields` has 70 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3526: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3526: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3642-3674: Method `generate_all_lessons_edit_field` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3683-3747: Function `save_all_lessons_edit_fields` has a Cognitive Complexity of 19 (exceeds 5 allowed). Consider refactoring. [structure]
3683-3747: Method `save_all_lessons_edit_fields` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3686: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
3687: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
3687: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
3692: Missing wp_unslash() before sanitization. [phpcodesniffer]
3692: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
3692: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
3693: Missing wp_unslash() before sanitization. [phpcodesniffer]
3693: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
3693: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
3694: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
3694: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
3694: Missing wp_unslash() before sanitization. [phpcodesniffer]
3695: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
3695: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
3695: Missing wp_unslash() before sanitization. [phpcodesniffer]
3696: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
3696: Missing wp_unslash() before sanitization. [phpcodesniffer]
3696: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
3698: Missing wp_unslash() before sanitization. [phpcodesniffer]
3698: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
3698: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
3706: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3710: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3718: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3735: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3762: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3797-3829: Function `single_course_lessons_classes` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
3837-3935: Method `the_lesson_meta` has 53 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
3837-3935: Function `the_lesson_meta` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
3850: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3898: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3909: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3952: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3969: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
3995: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
3996: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
4012-4040: Function `maybe_start_lesson` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
4056: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
4066: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
4086: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
4225: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
4283: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
4299-4359: Method `footer_quiz_call_to_action` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
4299-4359: Function `footer_quiz_call_to_action` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
4334: Found precision alignment of 1 spaces. [phpcodesniffer]
4390-4417: Function `user_lesson_quiz_status_message` has a Cognitive Complexity of 11 (exceeds 5 allowed). Consider refactoring. [structure]
4412: This comment is 75% valid code; is this commented out code? [phpcodesniffer]
4429: Assignments must be the first block of code on a line [phpcodesniffer]
4429: Assignments must be the first block of code on a line [phpcodesniffer]
4444: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
4449: Detected high pagination limit, `numberposts` is set to `4000` [phpcodesniffer]

== includes/class-sensei-list-table.php (21 issues) ==
104: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
104: Use Yoda Condition checks, you must. [phpcodesniffer]
108: Use Yoda Condition checks, you must. [phpcodesniffer]
108: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
120-141: Function `table_search_form` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
121: Detected access of super global var $_REQUEST, probably needs manual inspection. [phpcodesniffer]
121: Processing form data without nonce verification. [phpcodesniffer]
126: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
126: Processing form data without nonce verification. [phpcodesniffer]
126: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
126: Processing form data without nonce verification. [phpcodesniffer]
127: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
127: Processing form data without nonce verification. [phpcodesniffer]
128: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
150: Assignments must be the first block of code on a line [phpcodesniffer]
160: Assignments must be the first block of code on a line [phpcodesniffer]
169-216: Method `get_column_info` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
169-216: Function `get_column_info` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
226: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
226: Use Yoda Condition checks, you must. [phpcodesniffer]
237: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]

== includes/class-sensei-messages.php (40 issues) ==
1-858: File `class-sensei-messages.php` has 496 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
16-850: `Sensei_Messages` has 26 functions (exceeds 20 allowed). Consider refactoring. [structure]
69-110: Method `only_show_messages_to_owner` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
88: Avoid too many `return` statements within this method. [structure]
121: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
129-218: Method `meta_box_content` has 80 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
220-297: Method `send_message_link` has 51 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
220-297: Function `send_message_link` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
225: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
239: Processing form data without nonce verification. [phpcodesniffer]
239: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
244: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
246: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
299-340: Method `teacher_contact_form` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
316: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
316: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
316: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
316: Processing form data without nonce verification. [phpcodesniffer]
316: Processing form data without nonce verification. [phpcodesniffer]
344: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
344: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
348: Missing wp_unslash() before sanitization. [phpcodesniffer]
348: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
348: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
352: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
359: Missing wp_unslash() before sanitization. [phpcodesniffer]
359: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
359: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
374: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
398: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
417-465: Method `save_new_message_post` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
480: Use Yoda Condition checks, you must. [phpcodesniffer]
480: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
491: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
519-549: Function `message_login` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
541: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
545: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
596: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
773: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
842: Found precision alignment of 3 spaces. [phpcodesniffer]

== includes/class-sensei-modules.php (222 issues) ==
1-2287: File `class-sensei-modules.php` has 1223 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-core-modules.php, but found class-sensei-modules.php. [phpcodesniffer]
17-2287: `Sensei_Core_Modules` has 70 functions (exceeds 20 allowed). Consider refactoring. [structure]
26-118: Method `__construct` has 50 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
150: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
160: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
173-217: Method `lesson_module_metabox` has 33 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
254: urlencode() should only be used when dealing with legacy applications rawurlencode() should now be used instead. See http://php.net/manual/en/function.rawurlencode.php and http://www.faqs.org/rfcs/rfc3986.html [phpcodesniffer]
281: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
281: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
282: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
282: Missing wp_unslash() before sanitization. [phpcodesniffer]
282: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
300: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
300: Missing wp_unslash() before sanitization. [phpcodesniffer]
300: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
300: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
301: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
301: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
301: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
301: Missing wp_unslash() before sanitization. [phpcodesniffer]
360-399: Method `edit_module_fields` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
368: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
369: Detected usage of tax_query, possible slow query. [phpcodesniffer]
377: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
408-455: Function `save_module_course` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
408-455: Method `save_module_course` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
417: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
417: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
417: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
417: Processing form data without nonce verification. [phpcodesniffer]
417: Processing form data without nonce verification. [phpcodesniffer]
424: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
425: Detected usage of tax_query, possible slow query. [phpcodesniffer]
433: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
444: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
444: Processing form data without nonce verification. [phpcodesniffer]
444: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
444: Processing form data without nonce verification. [phpcodesniffer]
447: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
447: Missing wp_unslash() before sanitization. [phpcodesniffer]
447: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
447: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
447: Missing wp_unslash() before sanitization. [phpcodesniffer]
447: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
447: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
447: Processing form data without nonce verification. [phpcodesniffer]
447: Processing form data without nonce verification. [phpcodesniffer]
471: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
471: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
471: Detected usage of a non-validated input variable: $_GET [phpcodesniffer]
471: Missing wp_unslash() before sanitization. [phpcodesniffer]
479: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
479: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
479: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
479: Missing wp_unslash() before sanitization. [phpcodesniffer]
488: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
492: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
502: json_encode() is discouraged. Use wp_json_encode() instead. [phpcodesniffer]
524-551: Function `sensei_course_preview_titles` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
553-576: Function `module_breadcrumb_link` has a Cognitive Complexity of 15 (exceeds 5 allowed). Consider refactoring. [structure]
570: Processing form data without nonce verification. [phpcodesniffer]
570: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
570: Processing form data without nonce verification. [phpcodesniffer]
570: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
571: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
589-612: Function `do_link_to_module` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
663-689: Function `module_archive_filter` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
680: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
680: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
680: Processing form data without nonce verification. [phpcodesniffer]
680: Processing form data without nonce verification. [phpcodesniffer]
681: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
711-738: Function `module_archive_description` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
720: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
720: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
720: Processing form data without nonce verification. [phpcodesniffer]
720: Processing form data without nonce verification. [phpcodesniffer]
723: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
723: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
723: Processing form data without nonce verification. [phpcodesniffer]
723: Missing wp_unslash() before sanitization. [phpcodesniffer]
783: Processing form data without nonce verification. [phpcodesniffer]
783: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
783: Processing form data without nonce verification. [phpcodesniffer]
783: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
790: Processing form data without nonce verification. [phpcodesniffer]
790: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
806: update_user_meta() usage is highly discouraged, check VIP documentation on "Working with wp_users" [phpcodesniffer]
823: get_user_meta() usage is highly discouraged, check VIP documentation on "Working with wp_users" [phpcodesniffer]
840-880: Method `calculate_user_module_progress` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
845: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
846: Detected usage of tax_query, possible slow query. [phpcodesniffer]
853: Detected usage of meta_query, possible slow query. [phpcodesniffer]
861: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
905: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
905: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
905: Missing wp_unslash() before sanitization. [phpcodesniffer]
905: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
906: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
906: Missing wp_unslash() before sanitization. [phpcodesniffer]
906: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
906: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
906: Missing wp_unslash() before sanitization. [phpcodesniffer]
906: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
906: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
909: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
916: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
916: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
916: Missing wp_unslash() before sanitization. [phpcodesniffer]
916: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
931-1050: Method `module_order_screen` has 104 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
931-1050: Function `module_order_screen` has a Cognitive Complexity of 37 (exceeds 5 allowed). Consider refactoring. [structure]
934: Found precision alignment of 1 spaces. [phpcodesniffer]
936: Line indented incorrectly; expected 8 tabs, found 7 [phpcodesniffer]
936: Found precision alignment of 2 spaces. [phpcodesniffer]
940: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
940: Processing form data without nonce verification. [phpcodesniffer]
940: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
940: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
940: Missing wp_unslash() before sanitization. [phpcodesniffer]
940: Processing form data without nonce verification. [phpcodesniffer]
957: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
957: Processing form data without nonce verification. [phpcodesniffer]
958: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
968: Processing form data without nonce verification. [phpcodesniffer]
968: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
969: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
990: Use Yoda Condition checks, you must. [phpcodesniffer]
990: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
993: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
993: Use Yoda Condition checks, you must. [phpcodesniffer]
996: Use Yoda Condition checks, you must. [phpcodesniffer]
996: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1075: Use Yoda Condition checks, you must. [phpcodesniffer]
1075: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1077: urlencode() should only be used when dealing with legacy applications rawurlencode() should now be used instead. See http://php.net/manual/en/function.rawurlencode.php and http://www.faqs.org/rfcs/rfc3986.html [phpcodesniffer]
1147: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1148: Detected usage of tax_query, possible slow query. [phpcodesniffer]
1163: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1165: urlencode() should only be used when dealing with legacy applications rawurlencode() should now be used instead. See http://php.net/manual/en/function.rawurlencode.php and http://www.faqs.org/rfcs/rfc3986.html [phpcodesniffer]
1180-1199: Function `analysis_overview_column_title` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
1182: Processing form data without nonce verification. [phpcodesniffer]
1182: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1182: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1182: Processing form data without nonce verification. [phpcodesniffer]
1182: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1187: Use Yoda Condition checks, you must. [phpcodesniffer]
1187: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1210-1225: Function `analysis_overview_column_data` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
1211: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1211: Processing form data without nonce verification. [phpcodesniffer]
1211: Processing form data without nonce verification. [phpcodesniffer]
1211: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1211: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1216: urlencode() should only be used when dealing with legacy applications rawurlencode() should now be used instead. See http://php.net/manual/en/function.rawurlencode.php and http://www.faqs.org/rfcs/rfc3986.html [phpcodesniffer]
1216: urlencode() should only be used when dealing with legacy applications rawurlencode() should now be used instead. See http://php.net/manual/en/function.rawurlencode.php and http://www.faqs.org/rfcs/rfc3986.html [phpcodesniffer]
1236: Processing form data without nonce verification. [phpcodesniffer]
1236: Processing form data without nonce verification. [phpcodesniffer]
1236: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1236: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1236: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1251-1266: Function `analysis_course_column_data` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
1252: Processing form data without nonce verification. [phpcodesniffer]
1252: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1257: urlencode() should only be used when dealing with legacy applications rawurlencode() should now be used instead. See http://php.net/manual/en/function.rawurlencode.php and http://www.faqs.org/rfcs/rfc3986.html [phpcodesniffer]
1257: urlencode() should only be used when dealing with legacy applications rawurlencode() should now be used instead. See http://php.net/manual/en/function.rawurlencode.php and http://www.faqs.org/rfcs/rfc3986.html [phpcodesniffer]
1281-1322: Function `get_lesson_module` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
1320: Avoid too many `return` statements within this method. [structure]
1332-1379: Function `get_course_modules` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
1332-1379: Method `get_course_modules` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1353: Not using strict comparison for array_search; supply true for third argument. [phpcodesniffer]
1354: Use Yoda Condition checks, you must. [phpcodesniffer]
1431: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1442: Variable "localize_modulesAdmin" is not in valid snake_case format [phpcodesniffer]
1448: Variable "localize_modulesAdmin" is not in valid snake_case format [phpcodesniffer]
1539-1581: Method `get_lessons_query` has 33 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1552: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1553: Detected usage of meta_query, possible slow query. [phpcodesniffer]
1560: Detected usage of tax_query, possible slow query. [phpcodesniffer]
1573: Detected usage of meta_key, possible slow query. [phpcodesniffer]
1591-1657: Function `get_none_module_lessons` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
1591-1657: Method `get_none_module_lessons` has 44 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1596: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1628: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1629: Detected usage of meta_query, possible slow query. [phpcodesniffer]
1636: Detected usage of tax_query, possible slow query. [phpcodesniffer]
1665-1709: Method `setup_modules_taxonomy` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1723: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1723: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1741: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
1747: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1766: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
1772: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1809: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1872-1928: Method `course_module_metabox` has 50 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1892: Use Yoda Condition checks, you must. [phpcodesniffer]
1892: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1937-1998: Method `add_new_module_term` has 33 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1937-1998: Function `add_new_module_term` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
1939: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1939: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
1939: Missing wp_unslash() before sanitization. [phpcodesniffer]
1939: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1944: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
1944: Missing wp_unslash() before sanitization. [phpcodesniffer]
1944: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1956: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
1956: Missing wp_unslash() before sanitization. [phpcodesniffer]
1956: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2007: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2007: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
2025-2047: Function `filter_module_terms` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
2028: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2039: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2078: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2121: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2139-2174: Function `append_teacher_name_to_module` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
2141: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2148: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2197: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2201: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== includes/class-sensei-posttypes.php (29 issues) ==
1-907: File `class-sensei-posttypes.php` has 558 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
16-899: `Sensei_PostTypes` has 22 functions (exceeds 20 allowed). Consider refactoring. [structure]
46-90: Method `__construct` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
81: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
81: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
81: Use Yoda Condition checks, you must. [phpcodesniffer]
81: Use Yoda Condition checks, you must. [phpcodesniffer]
178: Found precision alignment of 1 spaces. [phpcodesniffer]
215-258: Method `setup_lesson_post_type` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
267-307: Method `setup_quiz_post_type` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
391-427: Method `setup_sensei_message_post_type` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
435-470: Method `setup_course_category_taxonomy` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
553-587: Method `setup_question_category_taxonomy` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
595-628: Method `setup_lesson_tag_taxonomy` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
636-675: Method `setup_post_type_labels_base` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
758: Processing form data without nonce verification. [phpcodesniffer]
758: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
758: Processing form data without nonce verification. [phpcodesniffer]
758: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
766: Found precision alignment of 1 spaces. [phpcodesniffer]
767: Found precision alignment of 1 spaces. [phpcodesniffer]
768: Found precision alignment of 1 spaces. [phpcodesniffer]
769: Found precision alignment of 1 spaces. [phpcodesniffer]
770: Found precision alignment of 1 spaces. [phpcodesniffer]
771: Found precision alignment of 1 spaces. [phpcodesniffer]
790: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
792: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
807-874: Method `set_role_cap_defaults` has 62 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
884: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== includes/class-sensei-question.php (94 issues) ==
1-1261: File `class-sensei-question.php` has 670 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
16-1253: `Sensei_Question` has 28 functions (exceeds 20 allowed). Consider refactoring. [structure]
86-117: Function `add_column_data` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
96: strip_tags() is discouraged. Use the more comprehensive wp_strip_all_tags() instead. [phpcodesniffer]
105: strip_tags() is discouraged. Use the more comprehensive wp_strip_all_tags() instead. [phpcodesniffer]
119-139: Function `question_edit_panel_metabox` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
120: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
141-214: Method `question_edit_panel` has 61 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
149: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
192: Array double arrow not aligned correctly; expected 4 space(s) between "'label'" and double arrow, but found 2. [phpcodesniffer]
196: Array double arrow not aligned correctly; expected 3 space(s) between "'option'" and double arrow, but found 1. [phpcodesniffer]
216-290: Function `question_lessons_panel` has a Cognitive Complexity of 14 (exceeds 5 allowed). Consider refactoring. [structure]
216-290: Method `question_lessons_panel` has 54 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
237: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
238: Detected usage of meta_query, possible slow query. [phpcodesniffer]
247: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
256: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
304: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
304: Processing form data without nonce verification. [phpcodesniffer]
333-378: Function `filter_options` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
333-378: Method `filter_options` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
336: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
341: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
341: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
341: Processing form data without nonce verification. [phpcodesniffer]
341: Missing wp_unslash() before sanitization. [phpcodesniffer]
341: Processing form data without nonce verification. [phpcodesniffer]
341: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
354: Processing form data without nonce verification. [phpcodesniffer]
354: Missing wp_unslash() before sanitization. [phpcodesniffer]
354: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
354: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
354: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
354: Processing form data without nonce verification. [phpcodesniffer]
386-415: Function `filter_actions` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
389: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
392: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
392: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
392: Processing form data without nonce verification. [phpcodesniffer]
392: Processing form data without nonce verification. [phpcodesniffer]
392: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
392: Missing wp_unslash() before sanitization. [phpcodesniffer]
403: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
403: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
403: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
403: Missing wp_unslash() before sanitization. [phpcodesniffer]
403: Processing form data without nonce verification. [phpcodesniffer]
403: Processing form data without nonce verification. [phpcodesniffer]
432: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
458: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
464: Use Yoda Condition checks, you must. [phpcodesniffer]
464: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
466: Expected 1 space after closing brace; newline found [phpcodesniffer]
582-646: Function `get_the_question_media` has a Cognitive Complexity of 17 (exceeds 5 allowed). Consider refactoring. [structure]
582-646: Method `get_the_question_media` has 47 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
683-751: Method `answer_feedback_notes` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
683-751: Function `answer_feedback_notes` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
700: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
763-799: Method `the_answer_result_indication` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
763-799: Function `the_answer_result_indication` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
773: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
807-868: Method `output_result_indication` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
816: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
879-927: Method `get_template_data` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
885: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
941-994: Method `file_upload_load_question_data` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
941-994: Function `file_upload_load_question_data` has a Cognitive Complexity of 11 (exceeds 5 allowed). Consider refactoring. [structure]
943: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
947: Assignments must be the first block of code on a line [phpcodesniffer]
965: Assignments must be the first block of code on a line [phpcodesniffer]
1008-1161: Function `multiple_choice_load_question_data` has a Cognitive Complexity of 79 (exceeds 5 allowed). Consider refactoring. [structure]
1008-1161: Method `multiple_choice_load_question_data` has 88 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1010: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1040-1056: Consider simplifying this complex logical expression. [structure]
1040: Use Yoda Condition checks, you must. [phpcodesniffer]
1040: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1041: Use Yoda Condition checks, you must. [phpcodesniffer]
1041: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1042: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1047: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1061: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1061-1078: Consider simplifying this complex logical expression. [structure]
1065: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1069: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1070: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1084: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1111: Use Yoda Condition checks, you must. [phpcodesniffer]
1111: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1177: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1197-1251: Method `get_correct_answer` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1197-1251: Function `get_correct_answer` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
1203: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1209: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1214: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== includes/class-sensei-quiz.php (107 issues) ==
1-1444: File `class-sensei-quiz.php` has 609 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
16-1434: `Sensei_Quiz` has 34 functions (exceeds 20 allowed). Consider refactoring. [structure]
64: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
64: Processing form data without nonce verification. [phpcodesniffer]
65: Processing form data without nonce verification. [phpcodesniffer]
65: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
65: Found precision alignment of 1 spaces. [phpcodesniffer]
106: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
131: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
132: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
133: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
134: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
134: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
134: Missing wp_unslash() before sanitization. [phpcodesniffer]
134: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
140: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
143: Detected access of super global var $_FILES, probably needs manual inspection. [phpcodesniffer]
170-214: Function `save_user_answers` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
178: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
230-269: Function `get_user_answers` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
234: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
244: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
283: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
284: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
284: Missing wp_unslash() before sanitization. [phpcodesniffer]
284: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
284: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
286: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
316: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
317: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
318: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
319: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
319: Missing wp_unslash() before sanitization. [phpcodesniffer]
319: Detected usage of a non-validated input variable: $_POST [phpcodesniffer]
319: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
325: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
327: Detected access of super global var $_FILES, probably needs manual inspection. [phpcodesniffer]
340-398: Method `load_global_quiz_data` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
383: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
414-452: Function `prepare_form_submitted_answers` has a Cognitive Complexity of 15 (exceeds 5 allowed). Consider refactoring. [structure]
430: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
435: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
437: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
467-524: Method `reset_user_lesson_data` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
471: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
542-668: Method `submit_answers_for_grading` has 49 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
542-668: Function `submit_answers_for_grading` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
553: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
610: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
613: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
638: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
638: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
684-724: Function `get_user_question_answer` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
684-724: Method `get_user_question_answer` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
687-694: Consider simplifying this complex logical expression. [structure]
690: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
691: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
752: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
799: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
809: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
845-852: Consider simplifying this complex logical expression. [structure]
848: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
849: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
901: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
927: Found precision alignment of 1 spaces. [phpcodesniffer]
928: Found precision alignment of 1 spaces. [phpcodesniffer]
953-994: Function `get_user_answers_feedback` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
962: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1011-1064: Function `get_user_question_feedback` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
1011-1064: Method `get_user_question_feedback` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1016-1023: Consider simplifying this complex logical expression. [structure]
1019: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1020: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1092: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1092: Detected usage of a non-validated input variable: $_SERVER [phpcodesniffer]
1092: Detected access of super global var $_SERVER, probably needs manual inspection. [phpcodesniffer]
1092: Use Yoda Condition checks, you must. [phpcodesniffer]
1094: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1132: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1207: Found precision alignment of 1 spaces. [phpcodesniffer]
1209: Found precision alignment of 1 spaces. [phpcodesniffer]
1218: Found precision alignment of 1 spaces. [phpcodesniffer]
1220: Found precision alignment of 1 spaces. [phpcodesniffer]
1222: Found precision alignment of 1 spaces. [phpcodesniffer]
1222: Line indented incorrectly; expected 3 tabs, found 2 [phpcodesniffer]
1264-1327: Method `action_buttons` has 38 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1264-1327: Function `action_buttons` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
1280: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1283: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1286: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1301: Found precision alignment of 1 spaces. [phpcodesniffer]
1302: Found precision alignment of 1 spaces. [phpcodesniffer]
1304: Found precision alignment of 1 spaces. [phpcodesniffer]
1306: Found precision alignment of 1 spaces. [phpcodesniffer]
1308: Found precision alignment of 1 spaces. [phpcodesniffer]
1310: Found precision alignment of 1 spaces. [phpcodesniffer]
1310: Line indented incorrectly; expected 4 tabs, found 3 [phpcodesniffer]
1310: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1312: Found precision alignment of 1 spaces. [phpcodesniffer]
1314: Found precision alignment of 1 spaces. [phpcodesniffer]
1316: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
1318: Found precision alignment of 1 spaces. [phpcodesniffer]
1318: Line indented incorrectly; expected 4 tabs, found 3 [phpcodesniffer]
1320: Found precision alignment of 1 spaces. [phpcodesniffer]
1369: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1388: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1404: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]

== includes/class-sensei-settings-api.php (74 issues) ==
1-1069: File `class-sensei-settings-api.php` has 591 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
14-1061: `Sensei_Settings_API` has 42 functions (exceeds 20 allowed). Consider refactoring. [structure]
83: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
83: Use Yoda Condition checks, you must. [phpcodesniffer]
119-161: Function `settings_tabs` has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring. [structure]
119-161: Method `settings_tabs` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
149: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
149: Use Yoda Condition checks, you must. [phpcodesniffer]
203-228: Function `create_fields` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
209: Use Yoda Condition checks, you must. [phpcodesniffer]
209: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
224: Use Yoda Condition checks, you must. [phpcodesniffer]
224: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
224: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
224: Use Yoda Condition checks, you must. [phpcodesniffer]
238-280: Method `determine_method` has 33 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
238-280: Function `determine_method` has a Cognitive Complexity of 20 (exceeds 5 allowed). Consider refactoring. [structure]
241: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
250: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
250: Use Yoda Condition checks, you must. [phpcodesniffer]
251: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
251: Use Yoda Condition checks, you must. [phpcodesniffer]
259: Use Yoda Condition checks, you must. [phpcodesniffer]
259: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
260: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
260: Use Yoda Condition checks, you must. [phpcodesniffer]
267: Use Yoda Condition checks, you must. [phpcodesniffer]
267: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
271: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
271: Use Yoda Condition checks, you must. [phpcodesniffer]
272: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
272: Use Yoda Condition checks, you must. [phpcodesniffer]
290-302: Function `parse_fields` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
292: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
292: Use Yoda Condition checks, you must. [phpcodesniffer]
319: Processing form data without nonce verification. [phpcodesniffer]
319: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
319: Processing form data without nonce verification. [phpcodesniffer]
319: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
319: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
335-377: Method `settings_screen` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
340: Line indented incorrectly; expected 6 tabs, found 5 [phpcodesniffer]
340: Found precision alignment of 3 spaces. [phpcodesniffer]
341: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
386-400: Function `get_settings` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
394: Use Yoda Condition checks, you must. [phpcodesniffer]
394: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
394: Use Yoda Condition checks, you must. [phpcodesniffer]
394: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
550-579: Function `form_field_select` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
550-579: Method `form_field_select` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
589-615: Function `form_field_radio` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
625-673: Method `form_field_multicheck` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
625-673: Function `form_field_multicheck` has a Cognitive Complexity of 18 (exceeds 5 allowed). Consider refactoring. [structure]
634: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
638: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
683-713: Function `form_field_range` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
683-713: Method `form_field_range` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
723-751: Function `form_field_images` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
767: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
767: Use Yoda Condition checks, you must. [phpcodesniffer]
770: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
770: Use Yoda Condition checks, you must. [phpcodesniffer]
808-865: Method `validate_fields` has 43 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
808-865: Function `validate_fields` has a Cognitive Complexity of 43 (exceeds 5 allowed). Consider refactoring. [structure]
813: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
813: Use Yoda Condition checks, you must. [phpcodesniffer]
815: Use Yoda Condition checks, you must. [phpcodesniffer]
815: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
820: Use Yoda Condition checks, you must. [phpcodesniffer]
820: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
821: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
825: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
825: Use Yoda Condition checks, you must. [phpcodesniffer]

== includes/class-sensei-settings.php (17 issues) ==
1-716: File `class-sensei-settings.php` has 518 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
89: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
89: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
89: Processing form data without nonce verification. [phpcodesniffer]
89: Processing form data without nonce verification. [phpcodesniffer]
89: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
142-615: Method `init_fields` has 405 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
628: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
678: strip_tags() is discouraged. Use the more comprehensive wp_strip_all_tags() instead. [phpcodesniffer]
699: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
699: Processing form data without nonce verification. [phpcodesniffer]
699: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
699: Processing form data without nonce verification. [phpcodesniffer]
700: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
700: Processing form data without nonce verification. [phpcodesniffer]
700: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
700: Processing form data without nonce verification. [phpcodesniffer]

== includes/class-sensei-teacher.php (89 issues) ==
1-1629: File `class-sensei-teacher.php` has 748 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
15-1629: `Sensei_Teacher` has 37 functions (exceeds 20 allowed). Consider refactoring. [structure]
117: Use wpcom_vip_add_role() instead of add_role() [phpcodesniffer]
131-212: Method `add_capabilities` has 47 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
328: Processing form data without nonce verification. [phpcodesniffer]
328: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
328: Processing form data without nonce verification. [phpcodesniffer]
328: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
340: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
346: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
375-475: Function `update_course_modules_author` has a Cognitive Complexity of 43 (exceeds 5 allowed). Consider refactoring. [structure]
375-475: Method `update_course_modules_author` has 62 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
396: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
487-547: Method `update_course_lessons_author` has 39 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
487-547: Function `update_course_lessons_author` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
507: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
561-587: Function `course_analysis_teacher_access_limit` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
577: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
578: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
630: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
641: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
644: Found precision alignment of 1 spaces. [phpcodesniffer]
650: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
711-737: Function `filter_grading_activity_queries` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
720: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
730: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
751-784: Function `limit_grading_totals` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
794-838: Function `add_courses_to_author_archive` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
802: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
851: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
856: Use Yoda Condition checks, you must. [phpcodesniffer]
856: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
877-963: Method `notify_admin_teacher_course_creation` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
881: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
881: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
881: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
882: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
882: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
908: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
973-1049: Method `limit_analysis_learners` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
973-1049: Function `limit_analysis_learners` has a Cognitive Complexity of 21 (exceeds 5 allowed). Consider refactoring. [structure]
1070: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1098-1127: Function `give_access_to_all_questions` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
1100: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1106: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1157: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1182-1215: Function `get_teacher_courses` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
1198: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1226: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1252-1308: Method `course_teacher_filter_options` has 39 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1252-1308: Function `course_teacher_filter_options` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
1255: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1284: Processing form data without nonce verification. [phpcodesniffer]
1284: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1284: Missing wp_unslash() before sanitization. [phpcodesniffer]
1284: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1284: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1284: Processing form data without nonce verification. [phpcodesniffer]
1321: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1324: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1324: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1324: Processing form data without nonce verification. [phpcodesniffer]
1324: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1324: Missing wp_unslash() before sanitization. [phpcodesniffer]
1324: Processing form data without nonce verification. [phpcodesniffer]
1352: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1397: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1457: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1484: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1484: Processing form data without nonce verification. [phpcodesniffer]
1486: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
1486: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1486: Missing wp_unslash() before sanitization. [phpcodesniffer]
1492: wp_redirect() found. Using wp_safe_redirect(), along with the allowed_redirect_hosts filter if needed, can help avoid any chances of malicious redirects within code. It is also important to remember to call exit() after a redirect so that no other unwanted code is executed. [phpcodesniffer]
1516-1546: Function `restrict_posts_menu_page` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
1532: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1536: Use Yoda Condition checks, you must. [phpcodesniffer]
1536: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1536: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1536: Use Yoda Condition checks, you must. [phpcodesniffer]
1538: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1538: Use Yoda Condition checks, you must. [phpcodesniffer]
1538: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1538: Use Yoda Condition checks, you must. [phpcodesniffer]
1538: Use Yoda Condition checks, you must. [phpcodesniffer]
1538: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1563: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1563: Use Yoda Condition checks, you must. [phpcodesniffer]
1584: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]

== includes/class-sensei-templates.php (16 issues) ==
1-729: File `class-sensei-templates.php` has 270 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
15-729: `Sensei_Templates` has 30 functions (exceeds 20 allowed). Consider refactoring. [structure]
74: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]
144-272: Function `template_loader` has a Cognitive Complexity of 18 (exceeds 5 allowed). Consider refactoring. [structure]
144-272: Method `template_loader` has 69 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
151-259: Consider simplifying this complex logical expression. [structure]
165: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
175: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
185: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
195: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
252: Found precision alignment of 1 spaces. [phpcodesniffer]
253: Found precision alignment of 1 spaces. [phpcodesniffer]
704: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
704: Found precision alignment of 1 spaces. [phpcodesniffer]
705: Found precision alignment of 1 spaces. [phpcodesniffer]
706: Found precision alignment of 1 spaces. [phpcodesniffer]

== includes/class-sensei-updates.php (324 issues) ==
1-2116: File `class-sensei-updates.php` has 1487 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
15-2108: `Sensei_Updates` has 38 functions (exceeds 20 allowed). Consider refactoring. [structure]
32-190: Method `__construct` has 149 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
243-535: Function `sensei_updates_page` has a Cognitive Complexity of 89 (exceeds 5 allowed). Consider refactoring. [structure]
243-535: Method `sensei_updates_page` has 216 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
260: Processing form data without nonce verification. [phpcodesniffer]
260-534: Consider simplifying this complex logical expression. [structure]
260: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
260: Use Yoda Condition checks, you must. [phpcodesniffer]
260: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
260: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
261: Processing form data without nonce verification. [phpcodesniffer]
261: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
261: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
262: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
262: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
262: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
262: Processing form data without nonce verification. [phpcodesniffer]
262: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
262: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
262: Processing form data without nonce verification. [phpcodesniffer]
262: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
265: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
270: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
270: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
270: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
270: Processing form data without nonce verification. [phpcodesniffer]
272: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
272: Processing form data without nonce verification. [phpcodesniffer]
272: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
272: Missing wp_unslash() before sanitization. [phpcodesniffer]
274: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
275: Detected usage of a non-sanitized input variable: $_POST [phpcodesniffer]
275: Missing wp_unslash() before sanitization. [phpcodesniffer]
275: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
302: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
315: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
315: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
315: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
318: Missing wp_unslash() before sanitization. [phpcodesniffer]
318: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
318: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
322: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
323: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
323: Missing wp_unslash() before sanitization. [phpcodesniffer]
323: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
350: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
455: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
460: Found precision alignment of 2 spaces. [phpcodesniffer]
477: Use Yoda Condition checks, you must. [phpcodesniffer]
477: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
490: Found precision alignment of 3 spaces. [phpcodesniffer]
491: Found precision alignment of 3 spaces. [phpcodesniffer]
492: Line indented incorrectly; expected 13 tabs, found 12 [phpcodesniffer]
492: Found precision alignment of 3 spaces. [phpcodesniffer]
497: Found precision alignment of 3 spaces. [phpcodesniffer]
498: Found precision alignment of 3 spaces. [phpcodesniffer]
499: Found precision alignment of 3 spaces. [phpcodesniffer]
499: Line indented incorrectly; expected 13 tabs, found 12 [phpcodesniffer]
506: Found precision alignment of 3 spaces. [phpcodesniffer]
518: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
568: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
591-638: Method `update` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
591-638: Function `update` has a Cognitive Complexity of 38 (exceeds 5 allowed). Consider refactoring. [structure]
604: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
608: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
609: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
640-719: Method `force_updates` has 52 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
640-719: Function `force_updates` has a Cognitive Complexity of 46 (exceeds 5 allowed). Consider refactoring. [structure]
642: Processing form data without nonce verification. [phpcodesniffer]
642: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
642: Processing form data without nonce verification. [phpcodesniffer]
642: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
642: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
658: Use Yoda Condition checks, you must. [phpcodesniffer]
658: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
729: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
754-769: Function `assign_role_caps` has a Cognitive Complexity of 15 (exceeds 5 allowed). Consider refactoring. [structure]
781: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
785: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
800-821: Function `set_default_question_type` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
803: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
807: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
830-925: Function `update_question_answer_data` has a Cognitive Complexity of 45 (exceeds 5 allowed). Consider refactoring. [structure]
830-925: Method `update_question_answer_data` has 78 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
837: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
851: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
919: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
936: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
940: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
957: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
959: Detected usage of tax_query, possible slow query. [phpcodesniffer]
968: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
994: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1008: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1014: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1028-1065: Method `set_default_show_question_count` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1028-1065: Function `set_default_show_question_count` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
1035: Detected usage of meta_key, possible slow query. [phpcodesniffer]
1038: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1042: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1053: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1059: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1067-1128: Function `remove_deleted_user_activity` has a Cognitive Complexity of 26 (exceeds 5 allowed). Consider refactoring. [structure]
1067-1128: Method `remove_deleted_user_activity` has 48 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1072: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1075: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1078: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1093: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1096: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1099: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1116: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1131: Use wpcom_vip_add_role() instead of add_role() [phpcodesniffer]
1156: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1161: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1179-1220: Function `update_quiz_settings` has a Cognitive Complexity of 12 (exceeds 5 allowed). Consider refactoring. [structure]
1179-1220: Method `update_quiz_settings` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1195: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1200: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1208: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1222-1252: Function `reset_lesson_order_meta` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
1225: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1230: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1277: Usage of a direct database call is discouraged. [phpcodesniffer]
1277: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1277: Use placeholders and $wpdb->prepare(); found $sql [phpcodesniffer]
1282-1333: Method `update_quiz_lesson_relationship` has 38 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1282-1333: Function `update_quiz_lesson_relationship` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
1291: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1305: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1309: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1328: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1328: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1335-1421: Function `status_changes_fix_lessons` has a Cognitive Complexity of 25 (exceeds 5 allowed). Consider refactoring. [structure]
1335-1421: Method `status_changes_fix_lessons` has 63 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1344: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1349: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1364: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1372: Usage of a direct database call is discouraged. [phpcodesniffer]
1372: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1372: Use placeholders and $wpdb->prepare(); found interpolated variable $id_list at "SELECT post_id, meta_value FROM $wpdb->postmeta WHERE meta_key = '_quiz_lesson' AND meta_value IN ($id_list)" [phpcodesniffer]
1386: Use placeholders and $wpdb->prepare(); found interpolated variable $id_list at "SELECT meta_value FROM $wpdb->postmeta WHERE meta_key = '_quiz_id' AND meta_value IN ($id_list)" [phpcodesniffer]
1386: Usage of a direct database call is discouraged. [phpcodesniffer]
1386: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1399: Assignments must be the first block of code on a line [phpcodesniffer]
1401: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1408: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1416: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1423-1630: Method `status_changes_convert_lessons` has 158 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1423-1630: Function `status_changes_convert_lessons` has a Cognitive Complexity of 97 (exceeds 5 allowed). Consider refactoring. [structure]
1428: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
1428: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1428: Usage of a direct database call is discouraged. [phpcodesniffer]
1430: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1434: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1446: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1447: Detected usage of meta_query, possible slow query. [phpcodesniffer]
1455: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1459: Assignments must be the first block of code on a line [phpcodesniffer]
1462: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1462: Use placeholders and $wpdb->prepare(); found interpolated variable $id_list at "SELECT post_id, meta_value FROM $wpdb->postmeta WHERE meta_key = '_quiz_lesson' AND meta_value IN ($id_list)" [phpcodesniffer]
1462: Usage of a direct database call is discouraged. [phpcodesniffer]
1476: Use placeholders and $wpdb->prepare(); found interpolated variable $id_list at "SELECT post_id, meta_key, meta_value FROM $wpdb->postmeta WHERE ( meta_key = '_pass_required' OR meta_key = '_quiz_passmark' ) AND post_id IN ($id_list)" [phpcodesniffer]
1476: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1476: Usage of a direct database call is discouraged. [phpcodesniffer]
1484: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1484-1486: Avoid deeply nested control flow statements. [structure]
1487-1489: Avoid deeply nested control flow statements. [structure]
1487: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1496: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
1504: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1504: Usage of a direct database call is discouraged. [phpcodesniffer]
1504: Use placeholders and $wpdb->prepare(); found $users_sql [phpcodesniffer]
1508: Assignments must be the first block of code on a line [phpcodesniffer]
1508: Assignments must be the first block of code on a line [phpcodesniffer]
1511: Usage of a direct database call is discouraged. [phpcodesniffer]
1511: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1511: Use placeholders and $wpdb->prepare(); found $end_sql [phpcodesniffer]
1519: Usage of a direct database call is discouraged. [phpcodesniffer]
1519: Use placeholders and $wpdb->prepare(); found $grade_sql [phpcodesniffer]
1519: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1529: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1529: Use placeholders and $wpdb->prepare(); found $answers_sql [phpcodesniffer]
1529: Usage of a direct database call is discouraged. [phpcodesniffer]
1537: Usage of a direct database call is discouraged. [phpcodesniffer]
1537: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1537: Use placeholders and $wpdb->prepare(); found $start_sql [phpcodesniffer]
1562: Assignments must be the first block of code on a line [phpcodesniffer]
1591: Use placeholders and $wpdb->prepare(); found $check_existing_sql [phpcodesniffer]
1592: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1592: Usage of a direct database call is discouraged. [phpcodesniffer]
1592: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1592: Use placeholders and $wpdb->prepare(); found $sql [phpcodesniffer]
1593: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1595: Usage of a direct database call is discouraged. [phpcodesniffer]
1596: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1598: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1601: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1601: Usage of a direct database call is discouraged. [phpcodesniffer]
1604: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1610: Usage of a direct database call is discouraged. [phpcodesniffer]
1613: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1614: Detected usage of meta_key, possible slow query. [phpcodesniffer]
1615: Detected usage of meta_value, possible slow query. [phpcodesniffer]
1625: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1632-1775: Function `status_changes_convert_courses` has a Cognitive Complexity of 46 (exceeds 5 allowed). Consider refactoring. [structure]
1632-1775: Method `status_changes_convert_courses` has 109 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1637: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
1637: Usage of a direct database call is discouraged. [phpcodesniffer]
1637: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1639: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1643: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1652: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1652: Usage of a direct database call is discouraged. [phpcodesniffer]
1662: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
1668: Usage of a direct database call is discouraged. [phpcodesniffer]
1668: Use placeholders and $wpdb->prepare(); found $users_sql [phpcodesniffer]
1668: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1673: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1673: Use placeholders and $wpdb->prepare(); found $start_sql [phpcodesniffer]
1673: Usage of a direct database call is discouraged. [phpcodesniffer]
1697: Use placeholders and $wpdb->prepare(); found $sql [phpcodesniffer]
1697: Usage of a direct database call is discouraged. [phpcodesniffer]
1697: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1736: Use placeholders and $wpdb->prepare(); found $check_existing_sql [phpcodesniffer]
1737: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1737: Usage of a direct database call is discouraged. [phpcodesniffer]
1737: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1737: Use placeholders and $wpdb->prepare(); found $sql [phpcodesniffer]
1738: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1740: Usage of a direct database call is discouraged. [phpcodesniffer]
1741: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1743: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1746: Usage of a direct database call is discouraged. [phpcodesniffer]
1746: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1749: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1755: Usage of a direct database call is discouraged. [phpcodesniffer]
1758: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1759: Detected usage of meta_key, possible slow query. [phpcodesniffer]
1760: Detected usage of meta_value, possible slow query. [phpcodesniffer]
1770: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1786-1895: Function `status_changes_repair_course_statuses` has a Cognitive Complexity of 39 (exceeds 5 allowed). Consider refactoring. [structure]
1786-1895: Method `status_changes_repair_course_statuses` has 84 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1792: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1797: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1804: Assignments must be the first block of code on a line [phpcodesniffer]
1807: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1807: Use placeholders and $wpdb->prepare(); found interpolated variable $n at "SELECT $wpdb->postmeta.post_id, $wpdb->postmeta.meta_value FROM $wpdb->postmeta INNER JOIN $wpdb->posts ON ($wpdb->posts.ID = $wpdb->postmeta.post_id) WHERE $wpdb->posts.post_type = 'lesson' AND $wpdb->postmeta.meta_key = '_lesson_course' LIMIT $n OFFSET $offset " [phpcodesniffer]
1807: Usage of a direct database call is discouraged. [phpcodesniffer]
1807: Use placeholders and $wpdb->prepare(); found interpolated variable $offset at "SELECT $wpdb->postmeta.post_id, $wpdb->postmeta.meta_value FROM $wpdb->postmeta INNER JOIN $wpdb->posts ON ($wpdb->posts.ID = $wpdb->postmeta.post_id) WHERE $wpdb->posts.post_type = 'lesson' AND $wpdb->postmeta.meta_key = '_lesson_course' LIMIT $n OFFSET $offset " [phpcodesniffer]
1817: Usage of a direct database call is discouraged. [phpcodesniffer]
1817: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1827: Assignments must be the first block of code on a line [phpcodesniffer]
1831: Use placeholders and $wpdb->prepare(); found $course_sql [phpcodesniffer]
1831: Usage of a direct database call is discouraged. [phpcodesniffer]
1831: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1848: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1875: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1890: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1897-2009: Method `status_changes_convert_questions` has 81 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1897-2009: Function `status_changes_convert_questions` has a Cognitive Complexity of 37 (exceeds 5 allowed). Consider refactoring. [structure]
1902: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
1902: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1902: Usage of a direct database call is discouraged. [phpcodesniffer]
1904: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1909: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1917: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
1922: Use placeholders and $wpdb->prepare(); found $users_sql [phpcodesniffer]
1922: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1922: Usage of a direct database call is discouraged. [phpcodesniffer]
1926: Assignments must be the first block of code on a line [phpcodesniffer]
1929: Usage of a direct database call is discouraged. [phpcodesniffer]
1929: Use placeholders and $wpdb->prepare(); found $grades_sql [phpcodesniffer]
1929: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1937: Usage of a direct database call is discouraged. [phpcodesniffer]
1937: Use placeholders and $wpdb->prepare(); found $notes_sql [phpcodesniffer]
1937: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1945: Use placeholders and $wpdb->prepare(); found $answers_sql [phpcodesniffer]
1946: Use placeholders and $wpdb->prepare(); found $sql [phpcodesniffer]
1946: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1946: Usage of a direct database call is discouraged. [phpcodesniffer]
1952: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1975: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1975: Usage of a direct database call is discouraged. [phpcodesniffer]
1980: Usage of a direct database call is discouraged. [phpcodesniffer]
1980: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
1983: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1989: Usage of a direct database call is discouraged. [phpcodesniffer]
1992: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1993: Detected usage of meta_key, possible slow query. [phpcodesniffer]
1994: Detected usage of meta_value, possible slow query. [phpcodesniffer]
2004: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2021: Usage of a direct database call is discouraged. [phpcodesniffer]
2021: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
2024: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
2024: Usage of a direct database call is discouraged. [phpcodesniffer]
2037-2070: Function `update_comment_course_lesson_comment_counts` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
2040: Usage of a direct database call is discouraged. [phpcodesniffer]
2040: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
2042: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2047: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2056: Usage of a direct database call is discouraged. [phpcodesniffer]
2056: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
2059: Usage of a direct database call is discouraged. [phpcodesniffer]
2059: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
2060: Usage of a direct database call is discouraged. [phpcodesniffer]
2065: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2075: Usage of a direct database call is discouraged. [phpcodesniffer]
2075: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
2083: Usage of a direct database call is discouraged. [phpcodesniffer]
2083: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
2083: Attempting a database schema change is highly discouraged. [phpcodesniffer]
2084: Usage of a direct database call is discouraged. [phpcodesniffer]
2084: Attempting a database schema change is highly discouraged. [phpcodesniffer]
2084: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
2090: Found precision alignment of 1 spaces. [phpcodesniffer]
2091: Found precision alignment of 1 spaces. [phpcodesniffer]
2092: Found precision alignment of 1 spaces. [phpcodesniffer]
2093: Found precision alignment of 1 spaces. [phpcodesniffer]
2094: Found precision alignment of 1 spaces. [phpcodesniffer]
2095: Found precision alignment of 1 spaces. [phpcodesniffer]
2096: Found precision alignment of 1 spaces. [phpcodesniffer]
2097: Found precision alignment of 1 spaces. [phpcodesniffer]
2098: Found precision alignment of 1 spaces. [phpcodesniffer]

== includes/class-sensei-usage-tracking-data.php (44 issues) ==
1-786: File `class-sensei-usage-tracking-data.php` has 488 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
18-786: `Sensei_Usage_Tracking_Data` has 28 functions (exceeds 20 allowed). Consider refactoring. [structure]
26-59: Method `get_usage_data` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
68-141: Method `get_quiz_stats` has 67 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
68-141: Function `get_quiz_stats` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
73: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
75: Detected usage of meta_query, possible slow query. [phpcodesniffer]
156: Usage of a direct database call is discouraged. [phpcodesniffer]
156: Use placeholders and $wpdb->prepare(); found $published_quiz_ids [phpcodesniffer]
156: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
173: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
173: Use placeholders and $wpdb->prepare(); found $published_quiz_ids [phpcodesniffer]
173: Usage of a direct database call is discouraged. [phpcodesniffer]
188: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
192: Detected usage of meta_query, possible slow query. [phpcodesniffer]
250: Detected usage of meta_query, possible slow query. [phpcodesniffer]
275: Detected usage of meta_query, possible slow query. [phpcodesniffer]
299: Detected usage of meta_query, possible slow query. [phpcodesniffer]
329: Detected usage of meta_query, possible slow query. [phpcodesniffer]
351: Usage of a direct database call is discouraged. [phpcodesniffer]
351: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
354: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
372: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
372: Usage of a direct database call is discouraged. [phpcodesniffer]
376: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
394: Usage of a direct database call is discouraged. [phpcodesniffer]
394: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
398: Usage of users/usermeta tables is highly discouraged in VIP context, For storing user additional user metadata, you should look at User Attributes. [phpcodesniffer]
434: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
434: Usage of a direct database call is discouraged. [phpcodesniffer]
455: Detected usage of meta_query, possible slow query. [phpcodesniffer]
480: Detected usage of meta_query, possible slow query. [phpcodesniffer]
505: Detected usage of tax_query, possible slow query. [phpcodesniffer]
529: Detected usage of meta_query, possible slow query. [phpcodesniffer]
554: Detected usage of meta_query, possible slow query. [phpcodesniffer]
579: Detected usage of meta_query, possible slow query. [phpcodesniffer]
605: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
636-669: Method `get_min_module_count` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
636-669: Function `get_min_module_count` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
641: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
689: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
719: Detected usage of meta_query, possible slow query. [phpcodesniffer]
744: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
746: Detected usage of meta_query, possible slow query. [phpcodesniffer]

== includes/class-sensei-utils.php (121 issues) ==
1-2570: File `class-sensei-utils.php` has 1381 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
16-2562: `Sensei_Utils` has 72 functions (exceeds 20 allowed). Consider refactoring. [structure]
77-146: Function `sensei_log_activity` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
77-146: Method `sensei_log_activity` has 50 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
116: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
116: Usage of a direct database call is discouraged. [phpcodesniffer]
122: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
158-227: Function `sensei_check_for_activity` has a Cognitive Complexity of 18 (exceeds 5 allowed). Consider refactoring. [structure]
158-227: Method `sensei_check_for_activity` has 39 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
176: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
181: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
200: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
219: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
238-265: Function `sensei_activity_ids` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
251: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
253: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
276-303: Function `sensei_delete_activities` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
313-342: Function `delete_all_user_activity` has a Cognitive Complexity of 19 (exceeds 5 allowed). Consider refactoring. [structure]
329: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
332: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
359: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
395: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
445-511: Function `sensei_save_quiz_answers` has a Cognitive Complexity of 33 (exceeds 5 allowed). Consider refactoring. [structure]
445-511: Method `sensei_save_quiz_answers` has 51 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
447: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
461: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
487: Detected access of super global var $_FILES, probably needs manual inspection. [phpcodesniffer]
488: Detected access of super global var $_FILES, probably needs manual inspection. [phpcodesniffer]
493-502: Avoid deeply nested control flow statements. [structure]
596: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
643: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
670: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
721-786: Function `sensei_start_lesson` has a Cognitive Complexity of 22 (exceeds 5 allowed). Consider refactoring. [structure]
721-786: Method `sensei_start_lesson` has 44 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
723: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
768: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
801: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
843: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
902-926: Function `sensei_get_user_question_grade` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
908: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
936-960: Function `sensei_get_user_question_answer_notes` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
942: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
963: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
985: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1008: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1043-1056: Function `array_sort_reorder` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
1044: Processing form data without nonce verification. [phpcodesniffer]
1044: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1044: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1044: Missing wp_unslash() before sanitization. [phpcodesniffer]
1044: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1044: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1044: Processing form data without nonce verification. [phpcodesniffer]
1046: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1048: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1048: Missing wp_unslash() before sanitization. [phpcodesniffer]
1048: Processing form data without nonce verification. [phpcodesniffer]
1048: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1048: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1048: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1048: Processing form data without nonce verification. [phpcodesniffer]
1092: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
1095: Detected usage of meta_query, possible slow query. [phpcodesniffer]
1104: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
1133-1173: Function `sensei_course_pass_grade` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
1182-1231: Function `sensei_course_user_grade` has a Cognitive Complexity of 15 (exceeds 5 allowed). Consider refactoring. [structure]
1184: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1241: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1266-1298: Function `sensei_user_course_status_message` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
1267: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1308-1493: Function `sensei_user_quiz_status_message` has a Cognitive Complexity of 50 (exceeds 5 allowed). Consider refactoring. [structure]
1308-1493: Method `sensei_user_quiz_status_message` has 115 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1310: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1342: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1345: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1348: Variable "comment_ID" is not in valid snake_case format [phpcodesniffer]
1373: Expected 1 space after closing brace; newline found [phpcodesniffer]
1382: Expected 1 space after closing brace; newline found [phpcodesniffer]
1386: Expected 1 space after closing brace; newline found [phpcodesniffer]
1411: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1421: Expected 1 space after closing brace; newline found [phpcodesniffer]
1423: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1433: Expected 1 space after closing brace; newline found [phpcodesniffer]
1475: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
1526-1569: Function `user_started_course` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
1580-1667: Method `user_complete_course` has 57 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1580-1667: Function `user_complete_course` has a Cognitive Complexity of 35 (exceeds 5 allowed). Consider refactoring. [structure]
1591: Assignments must be the first block of code on a line [phpcodesniffer]
1619: Expected 1 space after closing brace; newline found [phpcodesniffer]
1633: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1648: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1660: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1701-1736: Function `user_completed_course` has a Cognitive Complexity of 21 (exceeds 5 allowed). Consider refactoring. [structure]
1731: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1776-1849: Function `user_completed_lesson` has a Cognitive Complexity of 30 (exceeds 5 allowed). Consider refactoring. [structure]
1776-1849: Method `user_completed_lesson` has 44 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1820: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1834-1841: Avoid deeply nested control flow statements. [structure]
1843: Avoid too many `return` statements within this method. [structure]
1848: Avoid too many `return` statements within this method. [structure]
1913: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1915: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
1960-1985: Function `update_lesson_status` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
1998-2022: Function `update_course_status` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
2009: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
2155-2161: Consider simplifying this complex logical expression. [structure]
2158: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2208-2214: Consider simplifying this complex logical expression. [structure]
2211: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2249-2255: Consider simplifying this complex logical expression. [structure]
2252: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
2291-2360: Method `generate_drop_down` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
2291-2360: Function `generate_drop_down` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
2418: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2418: Processing form data without nonce verification. [phpcodesniffer]
2420: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
2420: Processing form data without nonce verification. [phpcodesniffer]
2452-2477: Function `array_zip_merge` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
2455: trigger_error() found. Debug code should not normally be used in production. [phpcodesniffer]
2511: Assignments must be the first block of code on a line [phpcodesniffer]
2532: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]

== includes/class-sensei-wp-cli.php (1 issue) ==
10-59: Method `register` has 48 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/class-sensei-wp-kses.php (1 issue) ==
104: Found precision alignment of 2 spaces. [phpcodesniffer]

== includes/class-sensei.php (33 issues) ==
1-1504: File `class-sensei.php` has 604 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-main.php, but found class-sensei.php. [phpcodesniffer]
13-1495: `Sensei_Main` has 57 functions (exceeds 20 allowed). Consider refactoring. [structure]
195: Assignments must be the first block of code on a line [phpcodesniffer]
322-413: Method `initialize_global_objects` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
408: Object property "Sensei_WPML" is not in valid snake_case format [phpcodesniffer]
694-878: Method `check_user_permissions` has 105 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
694-878: Function `check_user_permissions` has a Cognitive Complexity of 50 (exceeds 5 allowed). Consider refactoring. [structure]
756: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
818: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
888-903: Function `access_settings` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
894: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
913: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
913: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
927-990: Function `sensei_count_comments` has a Cognitive Complexity of 14 (exceeds 5 allowed). Consider refactoring. [structure]
927-990: Method `sensei_count_comments` has 47 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
941: Usage of a direct database call is discouraged. [phpcodesniffer]
943: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
944: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
954: Usage of a direct database call is discouraged. [phpcodesniffer]
954: Use placeholders and $wpdb->prepare(); found interpolated variable $where at "SELECT comment_approved, COUNT( * ) AS num_comments FROM {$wpdb->comments} {$where} GROUP BY comment_approved" [phpcodesniffer]
1444: Missing wp_unslash() before sanitization. [phpcodesniffer]
1444: Processing form data without nonce verification. [phpcodesniffer]
1444: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1444: Processing form data without nonce verification. [phpcodesniffer]
1444: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1444: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
1444: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1444: Processing form data without nonce verification. [phpcodesniffer]
1444: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
1444: Processing form data without nonce verification. [phpcodesniffer]
1444: Missing wp_unslash() before sanitization. [phpcodesniffer]
1444: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]

== includes/domain-models/class-sensei-domain-models-course-data-store-cpt.php (1 issue) ==
55: This comment is 60% valid code; is this commented out code? [phpcodesniffer]

== includes/domain-models/class-sensei-domain-models-course.php (1 issue) ==
24-109: Method `declare_fields` has 82 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/domain-models/class-sensei-domain-models-field-declaration.php (4 issues) ==
132: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
206-228: Function `get_default_value` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
224: Avoid too many `return` statements within this method. [structure]
227: Avoid too many `return` statements within this method. [structure]

== includes/domain-models/class-sensei-domain-models-model-abstract.php (6 issues) ==
15-422: `Sensei_Domain_Models_Model_Abstract` has 26 functions (exceeds 20 allowed). Consider refactoring. [structure]
44-64: Function `__construct` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
132-145: Function `merge_updates_from_request` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
158: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
160: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
284-311: Function `run_field_validations` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]

== includes/domain-models/class-sensei-domain-models-registry.php (2 issues) ==
171: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
186-208: Function `get_field_declarations` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]

== includes/emails/class-sensei-email-learner-completed-course.php (1 issue) ==
47-89: Method `trigger` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/emails/class-sensei-email-learner-graded-quiz.php (3 issues) ==
46-105: Function `trigger` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
46-105: Method `trigger` has 37 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
77: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== includes/emails/class-sensei-email-new-message-reply.php (2 issues) ==
72-132: Method `trigger` has 40 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
88: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== includes/emails/class-sensei-email-teacher-completed-course.php (1 issue) ==
45-92: Method `trigger` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/emails/class-sensei-email-teacher-new-message.php (1 issue) ==
43-98: Method `trigger` has 37 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/emails/class-sensei-email-teacher-quiz-submitted.php (1 issue) ==
43-88: Method `trigger` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/hooks/template.php (1 issue) ==
360: This comment is 50% valid code; is this commented out code? [phpcodesniffer]

== includes/lib/usage-tracking/class-usage-tracking-base.php (17 issues) ==
1-585: File `class-usage-tracking-base.php` has 276 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-usage-tracking-base.php, but found class-usage-tracking-base.php. [phpcodesniffer]
17-584: `Sensei_Usage_Tracking_Base` has 29 functions (exceeds 20 allowed). Consider refactoring. [structure]
163: Detected changing of cron_schedules, but could not detect the interval value. [phpcodesniffer]
206-260: Method `send_event` has 39 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
226: parse_url() is discouraged because of inconsistency in the output across PHP versions; use wp_parse_url() instead. [phpcodesniffer]
238: wp_remote_get() is highly discouraged, please use vip_safe_wp_remote_get() instead. [phpcodesniffer]
336: The $domain arg must be a single string literal, not "$this->get_text_domain()". [phpcodesniffer]
462-494: Method `maybe_display_tracking_opt_in` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
475: The $domain arg must be a single string literal, not "$this->get_text_domain()". [phpcodesniffer]
478: The $domain arg must be a single string literal, not "$this->get_text_domain()". [phpcodesniffer]
484: The $domain arg must be a single string literal, not "$this->get_text_domain()". [phpcodesniffer]
487: The $domain arg must be a single string literal, not "$this->get_text_domain()". [phpcodesniffer]
490: The $domain arg must be a single string literal, not "$this->get_text_domain()". [phpcodesniffer]
507: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
507: Detected access of super global var $_POST, probably needs manual inspection. [phpcodesniffer]
533-583: Method `output_opt_in_js` has 41 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/lib/usage-tracking/tests/support/wp-die-exception.php (1 issue) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-wp-die-exception.php, but found wp-die-exception.php. [phpcodesniffer]

== includes/lib/usage-tracking/tests/test-class-usage-tracking.php (5 issues) ==
1-530: File `test-class-usage-tracking.php` has 254 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
15-530: `Sensei_Usage_Tracking_Test` has 26 functions (exceeds 20 allowed). Consider refactoring. [structure]
195-238: Method `testSendEvent` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
213: parse_url() is discouraged because of inconsistency in the output across PHP versions; use wp_parse_url() instead. [phpcodesniffer]
350-402: Method `testSystemDataStructure` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== includes/rest-api/class-sensei-rest-api-endpoint-courses.php (4 issues) ==
21-63: Method `register` has 41 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
105-140: Function `create_or_update` has a Cognitive Complexity of 12 (exceeds 5 allowed). Consider refactoring. [structure]
105-140: Method `create_or_update` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
139: Avoid too many `return` statements within this method. [structure]

== includes/sensei-functions.php (7 issues) ==
11-38: Function `is_sensei` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
30: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
193: trigger_error() found. Debug code should not normally be used in production. [phpcodesniffer]
211: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
229: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
252: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
280-290: Function `sensei_check_woocommerce_version` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]

== includes/shortcodes/class-sensei-legacy-shortcodes.php (26 issues) ==
105: This comment is 50% valid code; is this commented out code? [phpcodesniffer]
182: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
182: Processing form data without nonce verification. [phpcodesniffer]
182: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
182: Missing wp_unslash() before sanitization. [phpcodesniffer]
184: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
228: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]
257-307: Function `initialise_legacy_course_loop` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
264: Processing form data without nonce verification. [phpcodesniffer]
264: Missing wp_unslash() before sanitization. [phpcodesniffer]
264: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
264: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
264: Processing form data without nonce verification. [phpcodesniffer]
264: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
264: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
265: Missing wp_unslash() before sanitization. [phpcodesniffer]
265: Detected usage of a non-sanitized input variable: $_GET [phpcodesniffer]
265: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
265: Processing form data without nonce verification. [phpcodesniffer]
268: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
316-375: Method `loop_courses` has 40 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
316-375: Function `loop_courses` has a Cognitive Complexity of 14 (exceeds 5 allowed). Consider refactoring. [structure]
338: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
382-476: Method `the_course` has 64 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
427: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
440: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== includes/shortcodes/class-sensei-shortcode-course-categories.php (2 issues) ==
59: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
124-156: Function `generate_term_ids` has a Cognitive Complexity of 15 (exceeds 5 allowed). Consider refactoring. [structure]

== includes/shortcodes/class-sensei-shortcode-courses.php (5 issues) ==
82: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
112-194: Function `setup_course_query` has a Cognitive Complexity of 17 (exceeds 5 allowed). Consider refactoring. [structure]
112-194: Method `setup_course_query` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
162: term_exists() is highly discouraged due to not being cached; please use wpcom_vip_term_exists() instead. [phpcodesniffer]
174: Detected usage of tax_query, possible slow query. [phpcodesniffer]

== includes/shortcodes/class-sensei-shortcode-featured-courses.php (3 issues) ==
64: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
97: Detected usage of meta_value, possible slow query. [phpcodesniffer]
98: Detected usage of meta_key, possible slow query. [phpcodesniffer]

== includes/shortcodes/class-sensei-shortcode-loader.php (2 issues) ==
151: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
186-210: Function `possibly_add_body_class` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]

== includes/shortcodes/class-sensei-shortcode-teachers.php (4 issues) ==
81-129: Function `render` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
149: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
179: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
197-224: Function `convert_usernames_to_ids` has a Cognitive Complexity of 11 (exceeds 5 allowed). Consider refactoring. [structure]

== includes/shortcodes/class-sensei-shortcode-user-courses.php (16 issues) ==
1-552: File `class-sensei-shortcode-user-courses.php` has 252 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
86-131: Function `__construct` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
86-131: Method `__construct` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
103: Processing form data without nonce verification. [phpcodesniffer]
103: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
104: Missing wp_unslash() before sanitization. [phpcodesniffer]
104: Detected access of super global var $_GET, probably needs manual inspection. [phpcodesniffer]
120: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
163-232: Method `setup_course_query` has 50 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
163-232: Function `setup_course_query` has a Cognitive Complexity of 19 (exceeds 5 allowed). Consider refactoring. [structure]
193: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
199: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
429: Found precision alignment of 3 spaces. [phpcodesniffer]
459-540: Method `print_course_toggle_actions_inline_script` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
523: Found precision alignment of 1 spaces. [phpcodesniffer]
524: Found precision alignment of 1 spaces. [phpcodesniffer]

== includes/shortcodes/class-sensei-shortcode-user-messages.php (3 issues) ==
53: Detected high pagination limit, `posts_per_page` is set to `500` [phpcodesniffer]
57: Detected usage of meta_query, possible slow query. [phpcodesniffer]
80: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== includes/template-functions.php (64 issues) ==
1-1349: File `template-functions.php` has 498 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
22: Found precision alignment of 1 spaces. [phpcodesniffer]
23: Found precision alignment of 1 spaces. [phpcodesniffer]
24: Found precision alignment of 1 spaces. [phpcodesniffer]
25: Found precision alignment of 1 spaces. [phpcodesniffer]
26: Found precision alignment of 1 spaces. [phpcodesniffer]
27: Found precision alignment of 1 spaces. [phpcodesniffer]
44: Found precision alignment of 1 spaces. [phpcodesniffer]
45: Found precision alignment of 1 spaces. [phpcodesniffer]
46: Found precision alignment of 1 spaces. [phpcodesniffer]
47: Found precision alignment of 1 spaces. [phpcodesniffer]
48: Found precision alignment of 1 spaces. [phpcodesniffer]
49: Found precision alignment of 1 spaces. [phpcodesniffer]
58: Found precision alignment of 1 spaces. [phpcodesniffer]
59: Found precision alignment of 1 spaces. [phpcodesniffer]
60: Found precision alignment of 1 spaces. [phpcodesniffer]
61: Found precision alignment of 1 spaces. [phpcodesniffer]
62: Found precision alignment of 1 spaces. [phpcodesniffer]
63: Found precision alignment of 1 spaces. [phpcodesniffer]
64: Found precision alignment of 1 spaces. [phpcodesniffer]
65: Found precision alignment of 1 spaces. [phpcodesniffer]
72: Found precision alignment of 1 spaces. [phpcodesniffer]
73: Found precision alignment of 1 spaces. [phpcodesniffer]
74: Found precision alignment of 1 spaces. [phpcodesniffer]
75: Found precision alignment of 1 spaces. [phpcodesniffer]
76: Found precision alignment of 1 spaces. [phpcodesniffer]
77: Found precision alignment of 1 spaces. [phpcodesniffer]
78: Found precision alignment of 1 spaces. [phpcodesniffer]
79: Found precision alignment of 1 spaces. [phpcodesniffer]
86: Found precision alignment of 1 spaces. [phpcodesniffer]
87: Found precision alignment of 1 spaces. [phpcodesniffer]
206-224: Function `sensei_course_archive_filter` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
215: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
254-287: Function `sensei_get_modules_and_lessons` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
300: Disabling pagination is prohibited in VIP context, do not set `posts_per_page` to `-1` ever. [phpcodesniffer]
302: Detected usage of meta_key, possible slow query. [phpcodesniffer]
305: Detected usage of meta_query, possible slow query. [phpcodesniffer]
314: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
367-420: Function `sensei_get_prev_next_lessons` has a Cognitive Complexity of 19 (exceeds 5 allowed). Consider refactoring. [structure]
367-420: Method `sensei_get_prev_next_lessons` has 40 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
380: Found precision alignment of 1 spaces. [phpcodesniffer]
381: Found precision alignment of 1 spaces. [phpcodesniffer]
422: Found precision alignment of 2 spaces. [phpcodesniffer]
423: Found precision alignment of 2 spaces. [phpcodesniffer]
424: Found precision alignment of 2 spaces. [phpcodesniffer]
425: Found precision alignment of 2 spaces. [phpcodesniffer]
426: Found precision alignment of 2 spaces. [phpcodesniffer]
427: Found precision alignment of 2 spaces. [phpcodesniffer]
428: Found precision alignment of 2 spaces. [phpcodesniffer]
429: Found precision alignment of 2 spaces. [phpcodesniffer]
430: Found precision alignment of 2 spaces. [phpcodesniffer]
547-582: Function `sensei_module_has_lessons` has a Cognitive Complexity of 11 (exceeds 5 allowed). Consider refactoring. [structure]
551: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
558: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
623: Found precision alignment of 1 spaces. [phpcodesniffer]
679-727: Function `sensei_get_the_module_status` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
861: Found precision alignment of 1 spaces. [phpcodesniffer]
910-972: Method `sensei_can_user_view_lesson` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
910-972: Function `sensei_can_user_view_lesson` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
918: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
979-1028: Method `sensei_the_single_lesson_meta` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
979-1028: Function `sensei_the_single_lesson_meta` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
1003: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
1239: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]

== includes/theme-integrations/storefront.php (1 issue) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-storefront.php, but found storefront.php. [phpcodesniffer]

== includes/theme-integrations/theme-integration-loader.php (3 issues) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-theme-integration-loader.php, but found theme-integration-loader.php. [phpcodesniffer]
85-123: Function `possibly_load_supported_theme_wrappers` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
97: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]

== includes/theme-integrations/twentyeleven.php (1 issue) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-twentyeleven.php, but found twentyeleven.php. [phpcodesniffer]

== includes/theme-integrations/twentyfifteen.php (4 issues) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-twentyfifteen.php, but found twentyfifteen.php. [phpcodesniffer]
38: Expected 1 space before opening brace; found 0 [phpcodesniffer]
38-116: Method `print_styles` has 66 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
38: Opening brace must be the last content on the line [phpcodesniffer]

== includes/theme-integrations/twentyfourteen.php (1 issue) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-twentyfourteen.php, but found twentyfourteen.php. [phpcodesniffer]

== includes/theme-integrations/twentyseventeen.php (1 issue) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-twentyseventeen.php, but found twentyseventeen.php. [phpcodesniffer]

== includes/theme-integrations/twentysixteen.php (1 issue) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-twentysixteen.php, but found twentysixteen.php. [phpcodesniffer]

== includes/theme-integrations/twentythirteen.php (1 issue) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-twentythirteen.php, but found twentythirteen.php. [phpcodesniffer]

== includes/theme-integrations/twentytwelve.php (1 issue) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-twentytwelve.php, but found twentytwelve.php. [phpcodesniffer]

== includes/theme-integrations/underscores.php (5 issues) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei--s.php, but found underscores.php. [phpcodesniffer]
14: Class name is not valid; consider Sensei_S instead [phpcodesniffer]
21: Opening brace must be the last content on the line [phpcodesniffer]
21: Expected 1 space before opening brace; found 0 [phpcodesniffer]
37: Found precision alignment of 2 spaces. [phpcodesniffer]

== includes/unsupported-theme-handlers/class-sensei-unsupported-theme-handler-course-results.php (1 issue) ==
47: get_page_by_path() is prohibited, please use wpcom_vip_get_page_by_path() instead. [phpcodesniffer]

== includes/unsupported-theme-handlers/class-sensei-unsupported-theme-handler-page-imitator.php (2 issues) ==
110-151: Method `generate_dummy_post_args` has 38 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
150: Avoid too many `return` statements within this method. [structure]

== sensei-lms.php (1 issue) ==
89: Function name "Sensei" is not in snake case format, try "sensei" [phpcodesniffer]

== templates/archive-course.php (1 issue) ==
40: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== templates/archive-lesson.php (1 issue) ==
36: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== templates/archive-message.php (1 issue) ==
40: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== templates/course-results.php (1 issue) ==
31: get_page_by_path() is prohibited, please use wpcom_vip_get_page_by_path() instead. [phpcodesniffer]

== templates/course-results/lessons.php (9 issues) ==
71-73: Avoid deeply nested control flow statements. [structure]
80: Found precision alignment of 3 spaces. [phpcodesniffer]
81: Found precision alignment of 3 spaces. [phpcodesniffer]
81: Line indented incorrectly; expected 7 tabs, found 6 [phpcodesniffer]
85: Found precision alignment of 1 spaces. [phpcodesniffer]
132-134: Avoid deeply nested control flow statements. [structure]
156: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
158: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
189: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== templates/emails/footer.php (2 issues) ==
15: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]
19: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]

== templates/emails/header.php (6 issues) ==
16: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]
20: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
25: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
30: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
36: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
112: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]

== templates/emails/learner-completed-course.php (1 issue) ==
20: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]

== templates/emails/learner-graded-quiz.php (1 issue) ==
20: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]

== templates/emails/new-message-reply.php (1 issue) ==
20: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]

== templates/emails/teacher-completed-course.php (1 issue) ==
20: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]

== templates/emails/teacher-completed-lesson.php (1 issue) ==
20: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]

== templates/emails/teacher-new-message.php (1 issue) ==
20: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]

== templates/emails/teacher-quiz-submitted.php (1 issue) ==
18: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]

== templates/emails/teacher-started-course.php (1 issue) ==
18: extract() usage is highly discouraged, due to the complexity and unintended issues it might cause. [phpcodesniffer]

== templates/single-course/lessons.php (1 issue) ==
86: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== templates/single-course/modules.php (4 issues) ==
116-120: Avoid deeply nested control flow statements. [structure]
154: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
156: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
158: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== templates/single-lesson.php (1 issue) ==
52: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== templates/single-quiz.php (2 issues) ==
123: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
133: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== templates/single-quiz/question-type-boolean.php (5 issues) ==
41: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
68: Found precision alignment of 3 spaces. [phpcodesniffer]
69: Found precision alignment of 3 spaces. [phpcodesniffer]
70: Found precision alignment of 3 spaces. [phpcodesniffer]
80: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== templates/single-quiz/question-type-file-upload.php (2 issues) ==
27: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
59: Found precision alignment of 3 spaces. [phpcodesniffer]

== templates/single-quiz/question-type-gap-fill.php (3 issues) ==
32: Found precision alignment of 3 spaces. [phpcodesniffer]
33: Found precision alignment of 3 spaces. [phpcodesniffer]
34: Found precision alignment of 3 spaces. [phpcodesniffer]

== templates/single-quiz/question-type-multiple-choice.php (4 issues) ==
35: Found precision alignment of 3 spaces. [phpcodesniffer]
36: Found precision alignment of 3 spaces. [phpcodesniffer]
37: Found precision alignment of 3 spaces. [phpcodesniffer]
48: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== templates/single-quiz/question-type-single-line.php (2 issues) ==
32: Found precision alignment of 3 spaces. [phpcodesniffer]
33: Found precision alignment of 3 spaces. [phpcodesniffer]

== templates/teacher-archive.php (1 issue) ==
37: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== tests/bootstrap.php (4 issues) ==
1: Class file names should be based on the class name with "class-" prepended. Expected class-sensei-unit-tests-bootstrap.php, but found bootstrap.php. [phpcodesniffer]
22: ini_set() found. Changing configuration at runtime is rarely necessary. [phpcodesniffer]
23: error_reporting() found. Changing configuration at runtime is rarely necessary. [phpcodesniffer]
23: error_reporting() can lead to full path disclosure. [phpcodesniffer]

== tests/framework/factories/class-sensei-factory.php (34 issues) ==
1-781: File `class-sensei-factory.php` has 371 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
10-781: `Sensei_Factory` has 24 functions (exceeds 20 allowed). Consider refactoring. [structure]
185-243: Function `get_course_with_lessons` has a Cognitive Complexity of 18 (exceeds 5 allowed). Consider refactoring. [structure]
185-243: Method `get_course_with_lessons` has 53 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
389-452: Function `generate_user_quiz_answers` has a Cognitive Complexity of 15 (exceeds 5 allowed). Consider refactoring. [structure]
389-452: Method `generate_user_quiz_answers` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
392: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
401: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
402: Found precision alignment of 1 spaces. [phpcodesniffer]
415: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
418: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]
420: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
423: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]
431: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
433: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]
435: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
437: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]
439: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
441: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]
443: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
472: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]
495: Method `attach_lessons_questions` has 5 arguments (exceeds 4 allowed). Consider refactoring. [structure]
495-539: Function `attach_lessons_questions` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
498: Found precision alignment of 1 spaces. [phpcodesniffer]
498: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
551: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
551: Found precision alignment of 1 spaces. [phpcodesniffer]
610: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
650: Found precision alignment of 1 spaces. [phpcodesniffer]
662: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
685: Found precision alignment of 1 spaces. [phpcodesniffer]
697: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
723: Found: !=. Use strict comparisons (=== or !==). [phpcodesniffer]
733: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]

== tests/framework/factories/class-wp-unittest-factory-for-post-sensei.php (2 issues) ==
26: Usage of a direct database call is discouraged. [phpcodesniffer]
26: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]

== tests/framework/factories/class-wp-unittest-factory-for-question.php (4 issues) ==
32-79: Function `get_sample_question_data` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
32-79: Method `get_sample_question_data` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
37: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]
39: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]

== tests/unit-tests/renderers/test-class-sensei-renderer-single-post.php (1 issue) ==
163-193: Method `testShouldShowPaginationWhenRequired` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== tests/unit-tests/test-class-course.php (2 issues) ==
54: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
57: Detected high pagination limit, `posts_per_page` is set to `10000` [phpcodesniffer]

== tests/unit-tests/test-class-domain-models-course.php (38 issues) ==
9: Member variable "modelClassName" is not in valid snake_case format. [phpcodesniffer]
10: Member variable "dataProviderClassName" is not in valid snake_case format. [phpcodesniffer]
18: Object property "modelClassName" is not in valid snake_case format [phpcodesniffer]
27-63: Method `testMapsFromEntityWhenIdProvided` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
35: Variable "mockDataProvider" is not in valid snake_case format [phpcodesniffer]
36: Object property "dataProviderClassName" is not in valid snake_case format [phpcodesniffer]
39: Variable "mockDataProvider" is not in valid snake_case format [phpcodesniffer]
54: Object property "modelClassName" is not in valid snake_case format [phpcodesniffer]
54: Variable "mockDataProvider" is not in valid snake_case format [phpcodesniffer]
67: Object property "modelClassName" is not in valid snake_case format [phpcodesniffer]
81: Object property "modelClassName" is not in valid snake_case format [phpcodesniffer]
94: Variable "courseWithNoTitle" is not in valid snake_case format [phpcodesniffer]
95: Variable "validationResult" is not in valid snake_case format [phpcodesniffer]
95: Variable "courseWithNoTitle" is not in valid snake_case format [phpcodesniffer]
96: Variable "validationResult" is not in valid snake_case format [phpcodesniffer]
98: Variable "courseWithTitle" is not in valid snake_case format [phpcodesniffer]
99: Variable "courseWithTitle" is not in valid snake_case format [phpcodesniffer]
99: Variable "validationResult" is not in valid snake_case format [phpcodesniffer]
100: Variable "validationResult" is not in valid snake_case format [phpcodesniffer]
104: Variable "mockUserDataSource" is not in valid snake_case format [phpcodesniffer]
107: Variable "mockUserDataSource" is not in valid snake_case format [phpcodesniffer]
110: Variable "mockUserDataSource" is not in valid snake_case format [phpcodesniffer]
112: Variable "courseWithInvalidAuthor" is not in valid snake_case format [phpcodesniffer]
118: Variable "courseWithInvalidAuthor" is not in valid snake_case format [phpcodesniffer]
122: Variable "courseWithTeacherAuthor" is not in valid snake_case format [phpcodesniffer]
128: Variable "courseWithTeacherAuthor" is not in valid snake_case format [phpcodesniffer]
132-170: Method `testValidatesStatusIfExists` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
133: Variable "mockUserDataSource" is not in valid snake_case format [phpcodesniffer]
136: Variable "mockUserDataSource" is not in valid snake_case format [phpcodesniffer]
139: Variable "mockUserDataSource" is not in valid snake_case format [phpcodesniffer]
141: Variable "courseWithInvalidAuthor" is not in valid snake_case format [phpcodesniffer]
147: Variable "courseWithInvalidAuthor" is not in valid snake_case format [phpcodesniffer]
151: Variable "courseWithTeacherAuthor" is not in valid snake_case format [phpcodesniffer]
158: Variable "courseWithTeacherAuthor" is not in valid snake_case format [phpcodesniffer]
161: Variable "courseWithTeacherAuthor" is not in valid snake_case format [phpcodesniffer]
168: Variable "courseWithTeacherAuthor" is not in valid snake_case format [phpcodesniffer]
176: Variable "testTeacherId" is not in valid snake_case format [phpcodesniffer]
184: Variable "testTeacherId" is not in valid snake_case format [phpcodesniffer]

== tests/unit-tests/test-class-grading.php (1 issue) ==
37-95: Method `gradeGapFillQuestions` has 56 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== tests/unit-tests/test-class-lesson.php (7 issues) ==
54-99: Method `testIsPreRequisiteComplete` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
101-215: Method `testAddLessonToCourseOrderHook` has 92 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
141: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
183: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
189: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
195: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
202: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]

== tests/unit-tests/test-class-modules.php (4 issues) ==
93-144: Method `testGetTermAuthor` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
124: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
128: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
142: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== tests/unit-tests/test-class-question.php (3 issues) ==
43-80: Method `testGetQuestionType` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
72: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
76: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]

== tests/unit-tests/test-class-quiz.php (38 issues) ==
1-1194: File `test-class-quiz.php` has 742 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
2-1194: `Sensei_Class_Quiz_Test` has 25 functions (exceeds 20 allowed). Consider refactoring. [structure]
46: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
52: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
72-158: Method `testSaveUserAnswers` has 54 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
72-158: Function `testSaveUserAnswers` has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring. [structure]
130: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
167-227: Method `testSaveUserAnswersUniquelyPerQuiz` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
184: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]
186: rand() is discouraged. Use the far less predictable wp_rand() instead. [phpcodesniffer]
221: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
222: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
223: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
234-278: Method `testSaveUserAnswersTransients` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
285-335: Method `testGetUserAnswersTransient` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
350: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
362-434: Method `testGetUserAnswers` has 42 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
380: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
387: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
396: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
428: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
430: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
442-492: Method `testResetUserLessonData` has 31 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
497-566: Method `testPrepareFormSubmittedAnswers` has 49 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
532: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
536: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
571-618: Method `testSubmitAnswersForGrading` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
623-693: Function `testGetUserQuestionAnswer` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
623-693: Method `testGetUserQuestionAnswer` has 49 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
663: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
698-764: Method `testSetUserGrades` has 46 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
769-814: Method `testGetUserGrades` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
819-872: Method `testGetUserQuestionGrade` has 39 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
877-941: Method `testSaveUserAnswersFeedback` has 39 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
978-1028: Method `testGetUserQuestionFeedback` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1035-1074: Method `testSaveUserFeedbackTransients` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1081-1132: Method `testGetUserFeedbackTransients` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
1141-1190: Method `testSaveUserAnswersQuestionsAskedNotOverwriteable` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== tests/unit-tests/test-class-sensei-data-cleaner.php (22 issues) ==
1-612: File `test-class-sensei-data-cleaner.php` has 401 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
30-73: Method `setupPosts` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
79-164: Method `setupTaxonomyTerms` has 71 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
321-375: Method `testSenseiTaxonomiesDeleted` has 46 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
333: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
333: Usage of a direct database call is discouraged. [phpcodesniffer]
344: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
344: Usage of a direct database call is discouraged. [phpcodesniffer]
355: Usage of a direct database call is discouraged. [phpcodesniffer]
355: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
366: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
366: Usage of a direct database call is discouraged. [phpcodesniffer]
383-432: Method `testOtherTaxonomiesUntouched` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
505-539: Method `testCleanupUserMeta` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
525: update_user_meta() usage is highly discouraged, check VIP documentation on "Working with wp_users" [phpcodesniffer]
526: get_user_meta() usage is highly discouraged, check VIP documentation on "Working with wp_users" [phpcodesniffer]
533: get_user_meta() usage is highly discouraged, check VIP documentation on "Working with wp_users" [phpcodesniffer]
537: get_user_meta() usage is highly discouraged, check VIP documentation on "Working with wp_users" [phpcodesniffer]
580: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
584: Detected usage of tax_query, possible slow query. [phpcodesniffer]
596: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
600: Disabling pagination is prohibited in VIP context, do not set `numberposts` to `-1` ever. [phpcodesniffer]

== tests/unit-tests/test-class-sensei-usage-tracking-data.php (9 issues) ==
1-1510: File `test-class-sensei-usage-tracking-data.php` has 1021 lines of code (exceeds 250 allowed). Consider refactoring. [structure]
3-1510: `Sensei_Usage_Tracking_Data_Test` has 55 functions (exceeds 20 allowed). Consider refactoring. [structure]
21-62: Method `setupCoursesAndModules` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
87-120: Method `enrollUsers` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
203-233: Method `testGetMinMaxQuestionsDrafts` has 28 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
305-344: Method `quizSettingData` has 38 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
358-421: Method `testQuizSettingCounts` has 59 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
429-462: Method `testQuizSettingCountsWithBadLesson` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
732-769: Method `testGetUsageDataQuestionTypes` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== tests/unit-tests/test-class-sensei.php (1 issue) ==
30: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== tests/unit-tests/test-class-teacher.php (11 issues) ==
32: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
38: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
44: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
67-144: Function `testUpdateCourseModulesAuthorChange` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
67-144: Method `testUpdateCourseModulesAuthorChange` has 43 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
103: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
103: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
117: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
117: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
153-216: Method `testUpdateCourseModulesAuthorChangeLessons` has 36 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
218-261: Method `testUpdateLessonTeacher` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== tests/unit-tests/test-class-utils.php (7 issues) ==
46-102: Method `testUpdateUserData` has 38 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
107-155: Method `testGetUserData` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
160-208: Method `testDeleteUserData` has 34 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
215: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
216: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
217: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
218: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]

== tests/unit-tests/test-template-functions.php (1 issue) ==
29-70: Method `testGetModulesAndLessonsEmptyModule` has 26 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== tests/unit-tests/unsupported-theme-handlers/test-class-sensei-unsupported-theme-handler-course-results.php (1 issue) ==
156: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]

== tests/unit-tests/unsupported-theme-handlers/test-class-sensei-unsupported-theme-handler-learner-profile.php (1 issue) ==
156: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]

== tests/unit-tests/unsupported-theme-handlers/test-class-sensei-unsupported-theme-handler-module.php (4 issues) ==
135-172: Method `testShouldSetupDummyPost` has 30 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
181-241: Method `setupModulePage` has 45 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
220: Detected usage of tax_query, possible slow query. [phpcodesniffer]
232: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]

== tests/unit-tests/unsupported-theme-handlers/test-class-sensei-unsupported-theme-handler-page-imitator.php (6 issues) ==
42: File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: fopen() [phpcodesniffer]
43: File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: fwrite() [phpcodesniffer]
43: Filesystem writes are forbidden, you should not be using fwrite() [phpcodesniffer]
44: File operations should use WP_Filesystem methods instead of direct PHP filesystem calls. Found: fclose() [phpcodesniffer]
53: Filesystem writes are forbidden, you should not be using unlink() [phpcodesniffer]
166: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]

== tests/unit-tests/unsupported-theme-handlers/test-class-sensei-unsupported-theme-handler-teacher-archive.php (1 issue) ==
162: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]

== uninstall.php (5 issues) ==
52-74: Function `is_another_sensei_activated` has a Cognitive Complexity of 13 (exceeds 5 allowed). Consider refactoring. [structure]
77: Usage of a direct database call is discouraged. [phpcodesniffer]
77: Usage of a direct database call without caching is prohibited on the VIP platform. Use wp_cache_get / wp_cache_set or wp_cache_delete. [phpcodesniffer]
81: switch_to_blog() is not something you should ever need to do in a VIP theme context. Instead use an API (XML-RPC, REST) to interact with other sites if needed. [phpcodesniffer]
96: switch_to_blog() is not something you should ever need to do in a VIP theme context. Instead use an API (XML-RPC, REST) to interact with other sites if needed. [phpcodesniffer]

== webpack.config.js (1 issue) ==
12-45: Function `webpackConfig` has 32 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== widgets/class-sensei-category-courses-widget.php (9 issues) ==
106: strip_tags() is discouraged. Use the more comprehensive wp_strip_all_tags() instead. [phpcodesniffer]
112: strip_tags() is discouraged. Use the more comprehensive wp_strip_all_tags() instead. [phpcodesniffer]
125-167: Method `form` has 35 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
176-238: Function `load_component` has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring. [structure]
176-238: Method `load_component` has 54 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
188: Detected usage of tax_query, possible slow query. [phpcodesniffer]
196: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
226: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
234: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

== widgets/class-sensei-course-categories-widget.php (2 issues) ==
103: strip_tags() is discouraged. Use the more comprehensive wp_strip_all_tags() instead. [phpcodesniffer]
123-158: Method `form` has 29 lines of code (exceeds 25 allowed). Consider refactoring. [structure]

== widgets/class-sensei-course-component-widget.php (21 issues) ==
80-121: Function `widget` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
85: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
86: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
86: Found precision alignment of 1 spaces. [phpcodesniffer]
86: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
109: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
135: strip_tags() is discouraged. Use the more comprehensive wp_strip_all_tags() instead. [phpcodesniffer]
154-188: Method `form` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
198-237: Function `load_component` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
273-340: Method `display_courses` has 47 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
273-340: Function `display_courses` has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring. [structure]
292: Found precision alignment of 3 spaces. [phpcodesniffer]
311: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
329: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
329: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
332: Found precision alignment of 1 spaces. [phpcodesniffer]
333: Found precision alignment of 1 spaces. [phpcodesniffer]
369: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
451: Detected usage of meta_key, possible slow query. [phpcodesniffer]
452: Detected usage of meta_value, possible slow query. [phpcodesniffer]
455: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]

== widgets/class-sensei-lesson-component-widget.php (12 issues) ==
63-99: Function `widget` has a Cognitive Complexity of 9 (exceeds 5 allowed). Consider refactoring. [structure]
70: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
70: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
70: Found: ==. Use strict comparisons (=== or !==). [phpcodesniffer]
88: Not using strict comparison for in_array; supply true for third argument. [phpcodesniffer]
113: strip_tags() is discouraged. Use the more comprehensive wp_strip_all_tags() instead. [phpcodesniffer]
132-166: Method `form` has 27 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
175-236: Method `load_component` has 54 lines of code (exceeds 25 allowed). Consider refactoring. [structure]
175-236: Function `load_component` has a Cognitive Complexity of 10 (exceeds 5 allowed). Consider refactoring. [structure]
189: get_posts() is discouraged in favor of creating a new WP_Query() so that Advanced Post Cache will cache the query, unless you explicitly supply suppress_filters => false. [phpcodesniffer]
215: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]
231: Expected 1 space before closing PHP tag; 0 found [phpcodesniffer]

Analysis complete! Found 4,015 issues.
